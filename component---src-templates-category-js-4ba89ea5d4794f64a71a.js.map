{"version":3,"file":"component---src-templates-category-js-4ba89ea5d4794f64a71a.js","mappings":"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","sources":["webpack://wedding/./src/graphql/products.js","webpack://wedding/./src/layout/components/Button/index.js","webpack://wedding/./src/layout/components/AddToCartButton/index.js","webpack://wedding/./src/layout/components/StripeBuyButton/index.js","webpack://wedding/./src/layout/images/photoFinder.js","webpack://wedding/./src/layout/jsonLd/index.js","webpack://wedding/./src/layout/components/HomeProductCard/index.js","webpack://wedding/./src/layout/pages/CategoryPage/index.js","webpack://wedding/./src/templates/category.js"],"sourcesContent":["import {findPhotos} from \"../layout/images/photoFinder\";\n\nexport const formatProduct = (product, photos) => {\n    const associatedPhotos = findPhotos(photos, product.coverPhotoId);\n    return {\n        ...product,\n        coverPhoto: associatedPhotos[0],\n        photos: associatedPhotos,\n        dimensions: [\n            product.length ? `Length: ${product.length}` : null,\n            product.width ? `Width: ${product.width}` : null,\n            product.height ? `Height: ${product.height}` : null,\n        ].filter(a => a),\n    }\n}\n","import * as React from \"react\";\n\nimport \"./styles.scss\";\n\nconst Button = (props) => {\n\n    return (\n        <button className=\"Button\" {...props}>\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;","import React, { useContext, useState }  from \"react\";\nimport cartContext from \"../../../context/cartContext\";\n\nimport Button from \"../Button\";\n\nconst AddToCartButton = (props) => {\n    const [ isAdding, setIsAdding] = useState(false);\n    const { cart, updateQuantity } = useContext(cartContext);\n\n    const {id, priceId} = props;\n    if (!priceId) {\n        return null;\n    }\n\n    const addItem = () => {\n        const item = cart.find(item => item.priceId === priceId);\n        if (!item) {\n            updateQuantity(priceId, id, 1);\n        } else {\n            updateQuantity(priceId, id, item.quantity + 1);\n        }\n        setIsAdding(true);\n        setTimeout(() => {\n            setIsAdding(false);\n        }, 400);\n    };\n\n    const text = isAdding ? 'Adding':  'Add to cart';\n    return (\n        <Button disabled={isAdding} onClick={addItem}>{text}</Button>\n    )\n}\n\nexport default AddToCartButton;","import React from \"react\";\nimport AddToCartButton from \"../AddToCartButton\";\n\nimport \"./styles.scss\";\n\nconst StripeBuyButton = (props) => {\n    const {id, priceId} = props;\n\n    return (\n        <AddToCartButton priceId={priceId} id={id} />\n    );\n}\n\nexport default StripeBuyButton;","\nexport const findPhotos = (photos, coverPhotoId) => {\n    const associatedPhotos = [];\n    photos.forEach(photo => {\n      photo.description.split(\",\").forEach(description => {\n        if (coverPhotoId.trim() === description.trim()) {\n          associatedPhotos.push(photo);\n        }\n      });\n    });\n\n    return associatedPhotos.sort();\n};","import React, {useEffect, useState}  from \"react\";\n\nexport const withTwoPassRendering = (WrappedComponent) => ({\n    children,\n    ...rest\n  }) => {\n    const [isClient, setIsClient] = useState(false);\n  \n    useEffect(() => {\n      setIsClient(true);\n    }, [setIsClient]);\n  \n    return (\n      <WrappedComponent {...rest} key={isClient}>\n        {children}\n      </WrappedComponent>\n    );\n  };\n\nconst JsonLd = (props) => {\n  const { data } = props;\n\n  return (\n    <script type='application/ld+json' dangerouslySetInnerHTML={{ __html: JSON.stringify(data) }} />\n  )\n\n};\n\nexport default JsonLd;","import React from \"react\";\nimport { H3 } from \"../Header\";\nimport { Link as GatsyLink } from \"gatsby\";\nimport StripeBuyButton from \"../StripeBuyButton\";\n\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport \"./styles.scss\";\n\nconst PetitsAnimauxProductCardImg = (props) => {\n    const {coverPhoto, name} = props;\n    return (\n        <div className=\"PetitsAnimauxCardImage\">\n            <GatsbyImage\n                image={getImage(coverPhoto.file)}\n                alt={name}\n            />\n        </div> \n    );\n}\n\nconst HomeProductCard = (props) => {\n    const { node } = props;\n    const {id, price, priceId} = node;\n    const name = node.name.trim();\n    const url = (\"/product/\" + id).trim();\n\n    return (\n        <div className=\"PetitsAnimauxCardContainer\">\n            <div className=\"PetitsAnimauxCard\">\n\n                <GatsyLink className=\"PetitsAnimauxCardLink\" to={url}>\n                    <PetitsAnimauxProductCardImg coverPhoto={node.coverPhoto} name={name} />\n                    <H3 className=\"PetitsAnimauxCardTitle\">{name}</H3>\n                </GatsyLink>\n                \n                <StripeBuyButton \n                    price={price} \n                    priceId={priceId} \n                    id={id} \n                />\n            </div>\n        </div>\n    );\n}\n\nexport default HomeProductCard;","import React, { useMemo } from \"react\";\nimport { H1 } from \"../../components/Header\";\nimport HomeProductCard from \"../../components/HomeProductCard\";\nimport {formatProduct} from \"../../../graphql/products\";\nimport \"./styles.scss\";\n\nconst Section = (props) => {\n  const {productMetadata} = props;\n  if (!productMetadata) {\n    return null;\n  }\n\n  const { products } = productMetadata;\n  if (products.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"ProductContainer\">\n      {products.map((node) => {\n        return (\n          <HomeProductCard key={node.id} node={node} />\n        );\n      })}\n    </div>\n  );\n}\n\nconst CategoryPage = (props) => {\n  const { categoryName, productTypeMapping, products, photos } = props;\n  const normalizedProducts = useMemo(\n    () => {\n      const categories = {};\n      products.forEach(product => {\n        const { category } = product;\n        if (productTypeMapping[category]) {\n          if (!categories[category]) {\n            categories[category] = [];\n          }\n\n          const formattedProduct = formatProduct(product, photos);\n          categories[category].push(formattedProduct);\n        }\n      });\n\n      const res = Object.keys(categories)\n        .filter(key => categories[key].length > 0)\n        .map(key => {\n\n          return {\n            type: key,\n            products: categories[key],\n            metadata: productTypeMapping[key],\n          };\n        });\n\n      return res;\n    },\n    [productTypeMapping, products, photos]\n  );\n\n  return (\n    <div className=\"CategoryPage\">\n\n      <H1>Shop for {categoryName}</H1>\n\n      <Section \n        productMetadata={normalizedProducts[0]} \n      />\n    </div>\n  )\n};\n\nexport default CategoryPage;","import { graphql } from \"gatsby\";\n\nimport React from \"react\";\nimport MainSectionWrapper from \"../layout\";\nimport CommonHead from \"../layout/Head\";\nimport CategoryPage from \"../layout/pages/CategoryPage\";\nimport JsonLd from \"../layout/jsonLd\";\n\nconst baseJsonLd = {\n  \"@context\": \"http://schema.org/\",\n  \"@type\": \"Organization\",\n  \"name\": \"CrochetNest\",\n  \"logo\": \"https://crochetnest.com/icons/icon-512x512.png\",\n  \"url\": \"https://crochetnest.com/\",\n  \"description\": \"Discover the unique items that Crochet Nests creates. We sell the best crochet products.\",\n};\n\nconst PageTemplate = (props) => {\n    const {\n    allGoogleSpreadsheetPetitsAnimauxCategories,\n    allGoogleSpreadsheetPetitsAnimauxProducts,\n    allGooglePhotosPhoto,\n  } = props.data;\n  const productTypeMapping = React.useMemo(() => {\n    const productTypeMapping = {};\n    allGoogleSpreadsheetPetitsAnimauxCategories.nodes.forEach((node) => {\n      productTypeMapping[node.category] = {\n        title: node.title,\n      };\n    });\n\n    return productTypeMapping;\n  }, [allGoogleSpreadsheetPetitsAnimauxCategories]);\n\n  const products = allGoogleSpreadsheetPetitsAnimauxProducts.nodes;\n  const photos = React.useMemo(() => {\n    return allGooglePhotosPhoto.nodes.filter(photo => photo.description);\n  }, [allGooglePhotosPhoto]);\n\n  return (\n    <>\n      <MainSectionWrapper>\n        <CategoryPage {...props} \n            categoryName={props.pageContext.categoryName}\n            productTypeMapping={productTypeMapping} \n            products={products} \n            photos={photos}\n        />\n      </MainSectionWrapper>\n\n      <JsonLd data={baseJsonLd} />\n    </>\n  )\n};\n\nexport function Head(props) {\n    const name = props.pageContext.categoryName;\n    const data = {\n        page: {\n            name, \n        }\n    };\n\n    return <CommonHead {...props} data={data} />;\n}\n\nexport const query = graphql`\n  query PetitsAnimaux($category: String!) {\n    allGoogleSpreadsheetPetitsAnimauxProducts {\n      nodes {\n        name\n        id\n        price\n        category\n        coverPhotoId\n        priceId\n        width\n        height\n        length\n      }\n    }\n    \n    allGoogleSpreadsheetPetitsAnimauxCategories(filter: { category: {eq: $category }}) {\n        nodes {\n            id\n            category\n            title\n        }\n    }\n\n    allGooglePhotosPhoto(filter: {album: {title: {eq: \"P2F\"} } }) {\n      nodes {\n        id\n        file {\n          childImageSharp {\n            gatsbyImageData(\n              height: 160\n            )\n          }\n        }\n        description\n      }\n    }\n\n  }\n`;\n\nexport default PageTemplate;"],"names":["formatProduct","product","photos","associatedPhotos","findPhotos","coverPhotoId","coverPhoto","dimensions","length","width","height","filter","a","props","React","Object","assign","className","children","isAdding","setIsAdding","useState","cart","updateQuantity","useContext","cartContext","id","priceId","text","Button","disabled","onClick","addItem","item","find","quantity","setTimeout","AddToCartButton","forEach","photo","description","split","trim","push","sort","data","type","dangerouslySetInnerHTML","__html","JSON","stringify","PetitsAnimauxProductCardImg","name","GatsbyImage","image","getImage","file","alt","node","price","url","GatsyLink","to","H3","StripeBuyButton","Section","productMetadata","products","map","HomeProductCard","key","categoryName","productTypeMapping","normalizedProducts","useMemo","categories","category","formattedProduct","keys","metadata","H1","baseJsonLd","Head","page","pageContext","CommonHead","allGoogleSpreadsheetPetitsAnimauxCategories","allGoogleSpreadsheetPetitsAnimauxProducts","allGooglePhotosPhoto","nodes","title","MainSectionWrapper","CategoryPage","JsonLd"],"sourceRoot":""}