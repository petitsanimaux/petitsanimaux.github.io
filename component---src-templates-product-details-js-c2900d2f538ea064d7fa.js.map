{"version":3,"file":"component---src-templates-product-details-js-c2900d2f538ea064d7fa.js","mappings":"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","sources":["webpack://wedding/./src/graphql/products.js","webpack://wedding/./src/layout/components/Button/index.js","webpack://wedding/./src/layout/components/AddToCartButton/index.js","webpack://wedding/./src/layout/components/StripeBuyButton/index.js","webpack://wedding/./src/layout/jsonLd/index.js","webpack://wedding/./src/seo/jsonLd.js","webpack://wedding/./src/layout/components/Link/index.js","webpack://wedding/./src/layout/components/EtsyLink/index.js","webpack://wedding/./src/layout/pages/ProductDetailsPage/index.js","webpack://wedding/./src/templates/productDetails.js","webpack://wedding/./node_modules/querystringify/index.js","webpack://wedding/./node_modules/requires-port/index.js","webpack://wedding/./node_modules/url-parse/index.js"],"sourcesContent":["\nexport const formatProduct = (product, photos) => {\n    return {\n        ...product,\n        coverPhoto: photos.find(photo => (photo.description || \"\").trim() === product.coverPhotoId.trim()),\n        dimensions: [\n            product.length ? `Length: ${product.length}` : null,\n            product.width ? `Width: ${product.width}` : null,\n            product.height ? `Height: ${product.height}` : null,\n        ].filter(a => a),\n    }\n}\n","import * as React from \"react\";\n\nimport \"./styles.scss\";\n\nconst Button = (props) => {\n\n    return (\n        <button className=\"Button\" {...props}>\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;","import React, { useContext, useState }  from \"react\";\nimport cartContext from \"../../../context/cartContext\";\n\nimport Button from \"../Button\";\n\nconst AddToCartButton = (props) => {\n    const [ isAdding, setIsAdding] = useState(false);\n    const { cart, updateQuantity } = useContext(cartContext);\n\n    const {id, priceId} = props;\n    if (!priceId) {\n        return null;\n    }\n\n    const addItem = () => {\n        const item = cart.find(item => item.priceId === priceId);\n        if (!item) {\n            updateQuantity(priceId, id, 1);\n        } else {\n            updateQuantity(priceId, id, item.quantity + 1);\n        }\n        setIsAdding(true);\n        setTimeout(() => {\n            setIsAdding(false);\n        }, 400);\n    };\n\n    const text = isAdding ? 'Adding':  'Add to cart';\n    return (\n        <Button disabled={isAdding} onClick={addItem}>{text}</Button>\n    )\n}\n\nexport default AddToCartButton;","import React from \"react\";\nimport AddToCartButton from \"../AddToCartButton\";\n\nimport \"./styles.scss\";\n\nconst StripeBuyButton = (props) => {\n    const {id, priceId} = props;\n\n    return (\n        <AddToCartButton priceId={priceId} id={id} />\n    );\n}\n\nexport default StripeBuyButton;","import React, {useEffect, useState}  from \"react\";\n\nexport const withTwoPassRendering = (WrappedComponent) => ({\n    children,\n    ...rest\n  }) => {\n    const [isClient, setIsClient] = useState(false);\n  \n    useEffect(() => {\n      setIsClient(true);\n    }, [setIsClient]);\n  \n    return (\n      <WrappedComponent {...rest} key={isClient}>\n        {children}\n      </WrappedComponent>\n    );\n  };\n\nconst JsonLd = (props) => {\n  const { data } = props;\n\n  return (\n    <script type='application/ld+json' dangerouslySetInnerHTML={{ __html: JSON.stringify(data) }} />\n  )\n\n};\n\nexport default JsonLd;","const baseUrl = \"https://crochetnest.com/\";\nconst brandLogoUrl = \"https://crochetnest.com/icons/icon-512x512.png\";\nconst brandName = \"CrochetNest\";\n\nexport const productJsonLd = {\n    \"@context\": \"https://www.schema.org\",\n    \"@type\": \"product\",\n    \"brand\": brandName,\n    \"logo\": brandLogoUrl,\n    \"name\": \"\",\n    \"category\": \"\",\n    \"image\": \"\",\n    \"description\": \"\",\n    \"aggregateRating\": {\n        \"@type\": \"aggregateRating\",\n        \"ratingValue\": \"5\",\n        \"reviewCount\": \"60\"\n    }\n};\n\nexport const homeJsonLd = {\n    \"@context\": \"http://schema.org/\",\n    \"@type\": \"Organization\",\n    \"name\": brandName,\n    \"logo\": brandLogoUrl,\n    \"url\": baseUrl,\n    \"description\": \"Discover the unique items that Crochet Nests creates. We sell the best crochet products.\",\n};","import * as React from \"react\";\nimport { Link as GatsyLink } from \"gatsby\";\nimport ParseUrl from \"url-parse\";\nimport {cn} from \"../../../classnames\";\n\nconst okDomains = new Set([\n    \"localhost\",\n    \"petitsanimaux.github.io\",\n    \"petitsanimaux\",\n    \"crochetnest.com\",\n    \"crochetnest\",\n]);\n\nconst isCurDomain = (href) => {\n    const url = new ParseUrl(href);\n    return okDomains.has(url.hostname);\n}\n\nfunction detectURLs(message) {\n    const urlRegex = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?!&//=]*)/gi;\n    return message.match(urlRegex);\n}\n\nconst ThemedLink = (props) => {\n    const {className = '', disabled, href, useTheming = true} = props;\n    if (!href) {\n        return null;\n    }\n\n    const classname = useTheming ? cn(props, \"Link\") : cn(props, \"\");\n    const urls = detectURLs(href);\n    const url = urls && urls.length > 0 ? urls[0] : href;\n    if (isCurDomain(url)) {\n        return (<GatsyLink className={classname} to={disabled ? \"#\" : url}>{props.children}</GatsyLink>);\n    }\n\n    return (\n        <a className={classname} target=\"_blank\" href={disabled ? \"#\" : url}>{props.children} </a>\n    );\n}\n\nexport default ThemedLink;","import React from \"react\";\nimport Link from \"../../components/Link\";\n\nimport \"./styles.scss\";\n\nconst EtsyLink = (props) => {\n    const {etsyLink} = props;\n\n    return (\n        <Link className={\"EtsyLink\"} href={etsyLink}>Buy on Etsy</Link>\n    );\n}\n\nexport default EtsyLink;","import React from \"react\";\nimport { H1, H2 } from \"../../components/Header\";\nimport MainSectionWrapper from \"../../index\";\nimport StripeBuyButton from \"../../components/StripeBuyButton\";\nimport EtsyLink from \"../../components/EtsyLink\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport JsonLd from \"../../jsonLd\";\n\nimport \"./styles.scss\";\n\nconst baseLdJson = {\n    \"@context\": \"https://www.schema.org\",\n    \"@type\": \"product\",\n    \"brand\": \"Crochet Nest\",\n    \"logo\": \"https://crochetnest.com/icons/icon-512x512.png\",\n    \"aggregateRating\": {\n        \"@type\": \"aggregateRating\",\n        \"ratingValue\": \"5\",\n        \"reviewCount\": \"24\"\n    }\n};\n\nconst ShippingDisclaimer = () => {\n    return (\n        <div>\n            <p><b>Made to order, will ship in 1 - 2 weeks.</b></p>\n            <p>Note: Each item is made with highest care and attention to details. However due to the nature of handmade items, slight differences may show from the pictures.</p>\n            <p><i>Gentle use is recommended</i></p>\n        </div>\n    );\n}\n\nconst ProductDetailsImages = (props) => {\n    const { coverPhoto, name } = props;\n\n    const images = [\n        coverPhoto,\n        coverPhoto,\n        coverPhoto,\n    ];\n\n    const imagesToShow = images.slice(0, 3);\n    return (\n        <div className=\"ProductDetailsPhotoContainer\">\n            <div className=\"ProductDetailsMainPhotoContainer\">\n                <GatsbyImage\n                    key={imagesToShow[0]}\n                    image={getImage(imagesToShow[0].file)}\n                    alt={name}\n                />\n            </div>\n            <div className=\"ProductDetailsSecondaryPhotoContainer\">\n                <div className=\"ProductDetailsSecondaryPhoto\">\n                    <GatsbyImage\n                            key={imagesToShow[1]}\n                            image={getImage(imagesToShow[1].file)}\n                            alt={name}\n                        />\n                </div>\n                <div className=\"ProductDetailsSecondaryPhoto\">\n                    <GatsbyImage\n                        key={imagesToShow[2]}\n                        image={getImage(imagesToShow[2].file)}\n                        alt={name}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst ProductDetailsInfo = (props) => {\n    const {id, etsyLink, name, materialDescription, description, dimensions, priceId, price} = props;\n\n    const flattenedDimensions = dimensions.reduce((accum, str, idx) => {\n        if (idx + 1 === dimensions.length) {\n            return accum + str\n        }                  \n        return `${accum} ${str}, `;\n    }, '')\n\n    return (\n        <div className=\"ProductDetailsProductDetails\">\n            <div className=\"ProductDetailsPricingDetails\">\n                <H1>{name}</H1>\n                <H2 className=\"Price\">${price} USD</H2>\n\n                {!etsyLink &&<StripeBuyButton priceId={priceId} id={id} />}\n\n                {etsyLink &&\n                <div className=\"ProductDetailsPurchaseMethods\">\n                    <StripeBuyButton priceId={priceId} id={id} />\n                    <div className=\"OrDivider\">\n                        or\n                    </div>\n                    <EtsyLink etsyLink={etsyLink} />\n                </div>\n                }\n            </div>\n\n            <p className=\"ProductDescription\">\n                {description}\n            </p>\n\n            {dimensions && dimensions.length > 0 &&\n                <p>\n                    Dimensions: {flattenedDimensions}\n                </p>\n            }\n\n            <p className=\"ProductDescription\">\n                {materialDescription}\n            </p>\n\n            <ShippingDisclaimer />\n\n        </div>\n    );\n}\n\nconst ProductDetailsPage = (props) => {\n    const { product } = props;\n    const {\n        coverPhoto,\n        name,\n    } = product;\n\n\n    return (\n        <>\n            <MainSectionWrapper>\n                <div className=\"ProductDetailsPageContainer\">\n                    <ProductDetailsImages \n                        coverPhoto={coverPhoto} \n                        name={name}\n                    />\n\n                    <ProductDetailsInfo\n                        {...product}\n                    />\n                </div>\n\n            </MainSectionWrapper>\n        </>\n    )\n};\n\nexport default ProductDetailsPage;","import { graphql } from \"gatsby\";\n\nimport React from \"react\";\nimport CommonHead from \"../layout/Head\";\nimport ProductDetailsPage from \"../layout/pages/ProductDetailsPage\";\nimport JsonLd from \"../layout/jsonLd\";\nimport { productJsonLd } from \"../seo/jsonLd\";\nimport {formatProduct} from \"../graphql/products\";\n\nconst PageTemplate = (props) => {\n  const {\n    allGoogleSpreadsheetPetitsAnimauxProducts,\n    allGooglePhotosPhoto,\n    allGoogleSpreadsheetPetitsAnimauxCategories,\n  } = props.data;\n  \n  const data = allGoogleSpreadsheetPetitsAnimauxProducts.nodes[0];\n  const product = formatProduct(data, allGooglePhotosPhoto.nodes);\n  const category = allGoogleSpreadsheetPetitsAnimauxCategories.nodes.find(node => {\n    return node.category === product.category;\n  });\n  const categoryName = category.title;\n  const coverUrl = product.coverPhoto.file.publicURL;\n  const jsonld = {\n    ...productJsonLd,\n    name: product.name,\n    category: categoryName,\n    image: coverUrl,\n    description: product.description,\n  }\n  return (\n    <>\n      <ProductDetailsPage product={product} />\n      <JsonLd data={jsonld} />\n    </>\n  )\n};\n\nexport function Head(props) {\n  const {\n    allGoogleSpreadsheetPetitsAnimauxProducts,\n  } = props.data;\n  const node = allGoogleSpreadsheetPetitsAnimauxProducts.nodes[0];\n\n  const data = {\n    page: {\n      name: node.name,\n    }\n  };\n\n  return <CommonHead {...props} data={data} />;\n}\n\nexport const query = graphql`\n  query PetitsAnimaux($id: String!) {\n    allGoogleSpreadsheetPetitsAnimauxProducts(filter: {id: {eq: $id}}) {\n      nodes {\n        name\n        id\n        price\n        category\n        description \n        materialDescription \n        etsyLink \n        coverPhotoId\n        priceId \n        width\n        height\n        length\n      }\n    }\n\n    allGoogleSpreadsheetPetitsAnimauxCategories {\n      nodes {\n          category\n          title\n      }\n  }\n    \n    allGooglePhotosPhoto(filter: {album: {title: {eq: \"P2F\"} } }) {\n      nodes {\n        id\n        file {\n          childImageSharp {\n            gatsbyImageData(\n              height: 500\n            )\n          }\n          publicURL\n        }\n        description\n      }\n    }\n\n  }\n`;\n\nexport default PageTemplate;","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?#&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encode(key);\n      value = encode(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , controlOrWhitespace = /^[\\x00-\\x20\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/\n  , CRHTLF = /[\\n\\r\\t]/g\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , port = /:\\d+$/\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i\n  , windowsDriveLetter = /^[a-zA-Z]:/;\n\n/**\n * Remove control characters and whitespace from the beginning of a string.\n *\n * @param {Object|String} str String to trim.\n * @returns {String} A new string representing `str` stripped of control\n *     characters and whitespace from its beginning.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(controlOrWhitespace, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address, url) {     // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d*)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * Check whether a protocol scheme is special.\n *\n * @param {String} The protocol scheme of the URL\n * @return {Boolean} `true` if the protocol scheme is special, else `false`\n * @private\n */\nfunction isSpecial(scheme) {\n  return (\n    scheme === 'file:' ||\n    scheme === 'ftp:' ||\n    scheme === 'http:' ||\n    scheme === 'https:' ||\n    scheme === 'ws:' ||\n    scheme === 'wss:'\n  );\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @param {Object} location\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address, location) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n  location = location || {};\n\n  var match = protocolre.exec(address);\n  var protocol = match[1] ? match[1].toLowerCase() : '';\n  var forwardSlashes = !!match[2];\n  var otherSlashes = !!match[3];\n  var slashesCount = 0;\n  var rest;\n\n  if (forwardSlashes) {\n    if (otherSlashes) {\n      rest = match[2] + match[3] + match[4];\n      slashesCount = match[2].length + match[3].length;\n    } else {\n      rest = match[2] + match[4];\n      slashesCount = match[2].length;\n    }\n  } else {\n    if (otherSlashes) {\n      rest = match[3] + match[4];\n      slashesCount = match[3].length;\n    } else {\n      rest = match[4]\n    }\n  }\n\n  if (protocol === 'file:') {\n    if (slashesCount >= 2) {\n      rest = rest.slice(2);\n    }\n  } else if (isSpecial(protocol)) {\n    rest = match[4];\n  } else if (protocol) {\n    if (forwardSlashes) {\n      rest = rest.slice(2);\n    }\n  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n    rest = match[4];\n  }\n\n  return {\n    protocol: protocol,\n    slashes: forwardSlashes || isSpecial(protocol),\n    slashesCount: slashesCount,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '', location);\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (\n    extracted.protocol === 'file:' && (\n      extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) ||\n    (!extracted.slashes &&\n      (extracted.protocol ||\n        extracted.slashesCount < 2 ||\n        !isSpecial(url.protocol)))\n  ) {\n    instructions[3] = [/(.*)/, 'pathname'];\n  }\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address, url);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      index = parse === '@'\n        ? address.lastIndexOf(parse)\n        : address.indexOf(parse);\n\n      if (~index) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n\n  if (url.auth) {\n    index = url.auth.indexOf(':');\n\n    if (~index) {\n      url.username = url.auth.slice(0, index);\n      url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n      url.password = url.auth.slice(index + 1);\n      url.password = encodeURIComponent(decodeURIComponent(url.password))\n    } else {\n      url.username = encodeURIComponent(decodeURIComponent(url.auth));\n    }\n\n    url.auth = url.password ? url.username +':'+ url.password : url.username;\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (port.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    case 'username':\n    case 'password':\n      url[part] = encodeURIComponent(value);\n      break;\n\n    case 'auth':\n      var index = value.indexOf(':');\n\n      if (~index) {\n        url.username = value.slice(0, index);\n        url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n        url.password = value.slice(index + 1);\n        url.password = encodeURIComponent(decodeURIComponent(url.password));\n      } else {\n        url.username = encodeURIComponent(decodeURIComponent(value));\n      }\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.auth = url.password ? url.username +':'+ url.password : url.username;\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , host = url.host\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result =\n    protocol +\n    ((url.protocol && url.slashes) || isSpecial(url.protocol) ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  } else if (url.password) {\n    result += ':'+ url.password;\n    result += '@';\n  } else if (\n    url.protocol !== 'file:' &&\n    isSpecial(url.protocol) &&\n    !host &&\n    url.pathname !== '/'\n  ) {\n    //\n    // Add back the empty userinfo, otherwise the original invalid URL\n    // might be transformed into a valid one with `url.pathname` as host.\n    //\n    result += '@';\n  }\n\n  //\n  // Trailing colon is removed from `url.host` when it is parsed. If it still\n  // ends with a colon, then add back the trailing colon that was removed. This\n  // prevents an invalid URL from being transformed into a valid one.\n  //\n  if (host[host.length - 1] === ':' || (port.test(url.hostname) && !url.port)) {\n    host += ':';\n  }\n\n  result += host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n"],"names":["formatProduct","product","photos","coverPhoto","find","photo","description","trim","coverPhotoId","dimensions","length","width","height","filter","a","props","React","Object","assign","className","children","isAdding","setIsAdding","useState","cart","updateQuantity","useContext","cartContext","id","priceId","text","Button","disabled","onClick","addItem","item","quantity","setTimeout","AddToCartButton","data","type","dangerouslySetInnerHTML","__html","JSON","stringify","brandLogoUrl","brandName","productJsonLd","homeJsonLd","okDomains","Set","href","useTheming","classname","cn","urls","match","url","ParseUrl","has","hostname","isCurDomain","GatsyLink","to","target","etsyLink","Link","ShippingDisclaimer","ProductDetailsImages","name","imagesToShow","slice","GatsbyImage","key","image","getImage","file","alt","ProductDetailsInfo","materialDescription","price","flattenedDimensions","reduce","accum","str","idx","H1","H2","StripeBuyButton","EtsyLink","MainSectionWrapper","Head","allGoogleSpreadsheetPetitsAnimauxProducts","page","nodes","CommonHead","allGooglePhotosPhoto","allGoogleSpreadsheetPetitsAnimauxCategories","categoryName","node","category","title","coverUrl","publicURL","jsonld","ProductDetailsPage","JsonLd","prototype","hasOwnProperty","decode","input","decodeURIComponent","replace","e","encode","encodeURIComponent","exports","obj","prefix","value","pairs","call","isNaN","push","join","parse","query","part","parser","result","exec","module","port","protocol","split","required","qs","controlOrWhitespace","CRHTLF","slashes","protocolre","windowsDriveLetter","trimLeft","toString","rules","address","isSpecial","NaN","undefined","ignore","hash","lolcation","loc","window","g","self","location","finaldestination","Url","unescape","pathname","test","scheme","extractProtocol","rest","toLowerCase","forwardSlashes","otherSlashes","slashesCount","this","relative","extracted","instruction","index","instructions","i","lastIndexOf","indexOf","charAt","base","path","concat","last","unshift","up","splice","resolve","host","username","password","auth","origin","set","fn","pop","char","ins"],"sourceRoot":""}