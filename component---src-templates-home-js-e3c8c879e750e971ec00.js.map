{"version":3,"file":"component---src-templates-home-js-e3c8c879e750e971ec00.js","mappings":"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","sources":["webpack://wedding/./node_modules/react-snap-carousel/dist/use-snap-carousel.mjs","webpack://wedding/./src/icons/arrow/index.js","webpack://wedding/./src/layout/components/Carousel/index.js","webpack://wedding/./src/layout/components/HomeBannerImage/index.js","webpack://wedding/./src/layout/components/HomeProductCard/index.js","webpack://wedding/./src/layout/pages/PetitsAnimauxHome/index.js","webpack://wedding/./src/templates/home.js"],"sourcesContent":["// src/use-snap-carousel.tsx\nimport {\n  useState,\n  useCallback,\n  useLayoutEffect,\n  useEffect,\n  useMemo\n} from \"react\";\nvar useSnapCarousel = ({\n  axis = \"x\",\n  initialPages = []\n} = {}) => {\n  const dimension = axis === \"x\" ? \"width\" : \"height\";\n  const scrollDimension = axis === \"x\" ? \"scrollWidth\" : \"scrollHeight\";\n  const clientDimension = axis === \"x\" ? \"clientWidth\" : \"clientHeight\";\n  const nearSidePos = axis === \"x\" ? \"left\" : \"top\";\n  const farSidePos = axis === \"x\" ? \"right\" : \"bottom\";\n  const scrollPos = axis === \"x\" ? \"scrollLeft\" : \"scrollTop\";\n  const [scrollEl, setScrollEl] = useState(null);\n  const [{ pages, activePageIndex }, setCarouselState] = useState({\n    pages: initialPages,\n    activePageIndex: 0\n  });\n  const refreshActivePage = useCallback(\n    (pages2) => {\n      if (!scrollEl) {\n        return;\n      }\n      const hasScrolledToEnd = Math.floor(scrollEl[scrollDimension] - scrollEl[scrollPos]) <= scrollEl[clientDimension];\n      if (hasScrolledToEnd) {\n        setCarouselState({ pages: pages2, activePageIndex: pages2.length - 1 });\n        return;\n      }\n      const items = Array.from(scrollEl.children);\n      const scrollPort = scrollEl.getBoundingClientRect();\n      const offsets = pages2.map((page) => {\n        const leadIndex = page[0];\n        const leadEl = items[leadIndex];\n        assert(leadEl instanceof HTMLElement, \"Expected HTMLElement\");\n        const scrollSpacing = getEffectiveScrollSpacing(\n          scrollEl,\n          leadEl,\n          nearSidePos\n        );\n        const rect = leadEl.getBoundingClientRect();\n        const offset = rect[nearSidePos] - scrollPort[nearSidePos] - scrollSpacing;\n        return Math.abs(offset);\n      });\n      const minOffset = Math.min(...offsets);\n      const nextActivePageIndex = offsets.indexOf(minOffset);\n      setCarouselState({ pages: pages2, activePageIndex: nextActivePageIndex });\n    },\n    [scrollEl, clientDimension, nearSidePos, scrollDimension, scrollPos]\n  );\n  const refresh = useCallback(() => {\n    if (!scrollEl) {\n      return;\n    }\n    const items = Array.from(scrollEl.children);\n    const scrollPort = scrollEl.getBoundingClientRect();\n    let currPageStartPos;\n    const pages2 = items.reduce((acc, item, i) => {\n      assert(item instanceof HTMLElement, \"Expected HTMLElement\");\n      const currPage = acc[acc.length - 1];\n      const rect = getOffsetRect(item, item.parentElement);\n      if (!currPage || rect[farSidePos] - currPageStartPos > Math.ceil(scrollPort[dimension])) {\n        acc.push([i]);\n        const scrollSpacing = getEffectiveScrollSpacing(\n          scrollEl,\n          item,\n          nearSidePos\n        );\n        currPageStartPos = rect[nearSidePos] - scrollSpacing;\n      } else {\n        currPage.push(i);\n      }\n      return acc;\n    }, []);\n    refreshActivePage(pages2);\n  }, [\n    refreshActivePage,\n    scrollEl,\n    dimension,\n    farSidePos,\n    nearSidePos,\n    scrollPos\n  ]);\n  useLayoutEffect(() => {\n    refresh();\n  }, [refresh]);\n  useEffect(() => {\n    const handle = () => {\n      refresh();\n    };\n    window.addEventListener(\"resize\", handle);\n    window.addEventListener(\"orientationchange\", handle);\n    return () => {\n      window.removeEventListener(\"resize\", handle);\n      window.removeEventListener(\"orientationchange\", handle);\n    };\n  }, [refresh]);\n  useEffect(() => {\n    if (!scrollEl) {\n      return;\n    }\n    const handle = () => {\n      refreshActivePage(pages);\n    };\n    scrollEl.addEventListener(\"scroll\", handle);\n    return () => {\n      scrollEl.removeEventListener(\"scroll\", handle);\n    };\n  }, [refreshActivePage, pages, scrollEl]);\n  const handleGoTo = (index) => {\n    if (!scrollEl) {\n      return;\n    }\n    const page = pages[index];\n    if (!page) {\n      return;\n    }\n    const items = Array.from(scrollEl.children);\n    const leadIndex = page[0];\n    const leadEl = items[leadIndex];\n    if (!(leadEl instanceof HTMLElement)) {\n      return;\n    }\n    const scrollSpacing = getEffectiveScrollSpacing(\n      scrollEl,\n      leadEl,\n      nearSidePos\n    );\n    scrollEl.scrollTo({\n      behavior: \"smooth\",\n      [nearSidePos]: getOffsetRect(leadEl, leadEl.parentElement)[nearSidePos] - scrollSpacing\n    });\n  };\n  const handlePrev = () => {\n    handleGoTo(activePageIndex - 1);\n  };\n  const handleNext = () => {\n    handleGoTo(activePageIndex + 1);\n  };\n  const snapPointIndexes = useMemo(\n    () => new Set(pages.map((page) => page[0])),\n    [pages]\n  );\n  return {\n    prev: handlePrev,\n    next: handleNext,\n    goTo: handleGoTo,\n    refresh,\n    pages,\n    activePageIndex,\n    snapPointIndexes,\n    scrollRef: setScrollEl\n  };\n};\nvar getOffsetRect = (el, relativeTo) => {\n  const rect = _getOffsetRect(el);\n  if (!relativeTo) {\n    return rect;\n  }\n  const relativeRect = _getOffsetRect(relativeTo);\n  return {\n    left: rect.left - relativeRect.left,\n    top: rect.top - relativeRect.top,\n    right: rect.right - relativeRect.left,\n    bottom: rect.bottom - relativeRect.top,\n    width: rect.width,\n    height: rect.height\n  };\n};\nvar _getOffsetRect = (el) => {\n  const rect = el.getBoundingClientRect();\n  let scrollLeft = 0;\n  let scrollTop = 0;\n  let parentEl = el.parentElement;\n  while (parentEl) {\n    scrollLeft += parentEl.scrollLeft;\n    scrollTop += parentEl.scrollTop;\n    parentEl = parentEl.parentElement;\n  }\n  const left = rect.left + scrollLeft;\n  const top = rect.top + scrollTop;\n  return {\n    left,\n    top,\n    right: left + rect.width,\n    bottom: top + rect.height,\n    width: rect.width,\n    height: rect.height\n  };\n};\nvar getScrollPaddingUsedValue = (el, pos) => {\n  const style = window.getComputedStyle(el);\n  const scrollPadding = style.getPropertyValue(`scroll-padding-${pos}`);\n  if (scrollPadding === \"auto\") {\n    return 0;\n  }\n  const invalidMsg = `Unsupported scroll padding value, expected <length> or <percentage> value, received ${scrollPadding}`;\n  if (scrollPadding.endsWith(\"px\")) {\n    const value = parseInt(scrollPadding);\n    assert(!Number.isNaN(value), invalidMsg);\n    return value;\n  }\n  if (scrollPadding.endsWith(\"%\")) {\n    const value = parseInt(scrollPadding);\n    assert(!Number.isNaN(value), invalidMsg);\n    return el.clientWidth / 100 * value;\n  }\n  throw new RSCError(invalidMsg);\n};\nvar getScrollMarginUsedValue = (el, pos) => {\n  const style = window.getComputedStyle(el);\n  const scrollMargin = style.getPropertyValue(`scroll-margin-${pos}`);\n  const invalidMsg = `Unsupported scroll margin value, expected <length> value, received ${scrollMargin}`;\n  assert(scrollMargin.endsWith(\"px\"), invalidMsg);\n  const value = parseInt(scrollMargin);\n  assert(!Number.isNaN(value), invalidMsg);\n  return value;\n};\nvar getEffectiveScrollSpacing = (scrollEl, itemEl, pos) => {\n  const scrollPadding = getScrollPaddingUsedValue(scrollEl, pos);\n  const scrollMargin = getScrollMarginUsedValue(itemEl, pos);\n  const rect = getOffsetRect(itemEl, itemEl.parentElement);\n  return Math.min(scrollPadding + scrollMargin, rect[pos]);\n};\nfunction assert(value, message) {\n  if (value) {\n    return;\n  }\n  throw new RSCError(message);\n}\nvar RSCError = class extends Error {\n  constructor(message) {\n    super(`[react-snap-carousel]: ${message}`);\n  }\n};\nexport {\n  useSnapCarousel\n};\n","import * as React from \"react\";\n\nimport \"./styles.scss\";\n\nconst Arrow = (props) => {\n    const {color = ''} = props; \n    return (\n        <div aria-label=\"Arrow Button\" role=\"button\"\n            className={`Arrow ${props.isLeft ? 'LeftArrow' : 'RightArrow'} ${color}`}>\n        </div>\n    );\n}\n\nexport default Arrow;","import React, {useEffect, useState}  from \"react\";\n\nimport { useSnapCarousel } from 'react-snap-carousel';\nimport IconButton from \"../IconButton\";\nimport Arrow from \"../../../icons/arrow\";\nimport \"./styles.scss\";\n\nconst Chevron = (props) => {\n  const { isLeft, onClick } = props;\n  const cn = isLeft ? \"ScrollButton Left\" : \"ScrollButton Right\"; \n\n  return (\n    <IconButton\n      className={cn}\n      variant=\"unstyled\"\n      onClick={onClick}\n    >\n      <Arrow isLeft={isLeft} color={'pink'} />\n    </IconButton>\n  );\n}\n\nconst Carousel = (props) => {\n  const [isClient, setIsClient] = useState(false);\n  \n  useEffect(() => {\n    setIsClient(true);\n  }, [setIsClient]);\n\n  const {\n    activePageIndex,\n    scrollRef,\n    goTo,\n    snapPointIndexes,\n    next,\n    prev,\n    pages,\n  } = useSnapCarousel();\n  const isAtEnd = activePageIndex === pages.length - 1;\n  const isAtBeginning = activePageIndex === 0;\n\n  const onClick = (isLeft) => {\n    return () => {\n      if (isLeft) {\n        if (isAtBeginning) {\n          goTo(pages.length - 1);\n        } else {\n          prev();\n        }\n      } else {\n        if (isAtEnd) {\n          goTo(0);\n        } else {\n          next();\n        }\n      }\n    }\n  };\n\n  const imagesPerPage = pages.length > 0 ? pages[0].length : 0,\n    start = Math.max((activePageIndex * imagesPerPage) - imagesPerPage, 0),\n    end = Math.min(start + imagesPerPage + imagesPerPage, props.children.length - 1);\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"CarouselContainer\"\n        ref={scrollRef}\n        style={{\n          display: 'flex',\n          overflow: 'auto',\n          scrollSnapType: 'x mandatory'\n        }}\n      >\n        {props.children.map((childImg, idx) => {\n          return (\n            <li className=\"CarouselImage\"\n              style={isClient ? {\n                scrollSnapAlign: snapPointIndexes.has(idx) ? \"start\" : \"\"\n              } : null} key={idx}>\n                {idx >= start && idx <= end &&\n                  <>\n                    {childImg}\n                  </>\n                }\n            </li>\n          );\n        })}\n      </ul>\n\n      <Chevron \n          isLeft={true} \n          onClick={onClick(true)}\n      />\n      <Chevron\n        isLeft={false}\n        onClick={onClick(false)}\n      />\n    </div>\n  );\n};\n\nconst CarouselWrapper = (props) => {\n  if (props.children.length === 0) {\n    return null;\n  }\n\n  return <Carousel {...props} />\n};\n\nexport default CarouselWrapper;","import React from \"react\";\n\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\n\nconst PetitsAnimauxBanner = (props) => {\n  const data = useStaticQuery(graphql`\n    query CoverPhoto {\n      allGooglePhotosPhoto(filter: {description: {eq: \"shop_cover_banner\" } }) {\n        nodes {\n          id\n          file {\n            childImageSharp {\n              gatsbyImageData(\n                placeholder: BLURRED\n                formats: [AUTO, WEBP]\n              )\n            }\n          }\n          description\n        }\n      }\n    }\n  `)\n\n  const {allGooglePhotosPhoto} = data;\n  const coverImg = allGooglePhotosPhoto.nodes[0];\n\n  return (\n    <GatsbyImage\n      image={getImage(coverImg.file)}\n      alt=\"Crochet Nest Banner\"\n    />\n  );\n}\n\nexport default PetitsAnimauxBanner;","import React from \"react\";\nimport { H3 } from \"../Header\";\nimport { Link as GatsyLink } from \"gatsby\";\nimport StripeBuyButton from \"../StripeBuyButton\";\n\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport \"./styles.scss\";\n\nconst PetitsAnimauxProductCardImg = (props) => {\n    const {coverPhoto, name} = props;\n\n    return (\n        <div className=\"PetitsAnimauxCardImage\">\n            <GatsbyImage\n                image={getImage(coverPhoto.file)}\n                alt={name}\n            />\n        </div> \n    );\n}\n\nconst PetitsAnimauxProductCardDimensions = (props) => {\n    const {dimensions} = props;\n    return (\n        <>\n            {dimensions.map((str, idx) => {\n                return <p className=\"PetitsAnimauxDescription\" key={idx}>{str}</p>\n            })}\n        </>\n    );\n}\n\nconst PetitsAnimauxProductCard = (props) => {\n    const { node } = props;\n\n    const {id, price, stripeUrl} = node;\n    const name = node.name.trim();\n    const url = (\"/product/\" + id).trim();\n\n    return (\n        <div className=\"PetitsAnimauxCardContainer\">\n            <div className=\"PetitsAnimauxCard\">\n\n                <GatsyLink className=\"PetitsAnimauxCardLink\" to={url}>\n                    <PetitsAnimauxProductCardImg coverPhoto={node.coverPhoto} name={name} />\n                    <H3 className=\"PetitsAnimauxCardTitle\">{name}</H3>\n                    <PetitsAnimauxProductCardDimensions dimensions={node.dimensions} />\n                </GatsyLink>\n                \n                <StripeBuyButton stripeUrl={stripeUrl} price={price} />\n            </div>\n        </div>\n    );\n}\n\nexport default PetitsAnimauxProductCard;","import React, { useMemo } from \"react\";\nimport { H1, H2 } from \"../../components/Header\";\nimport CarouselWrapper from \"../../components/Carousel\";\nimport HomeBannerImage from \"../../components/HomeBannerImage\";\nimport PetitsAnimauxProductCard from \"../../components/HomeProductCard\";\n\nimport \"./styles.scss\";\n\nconst PetitsAnimauxSection = (props) => {\n  const {productMetadata} = props;\n  const { metadata, products } = productMetadata;\n\n  if (products.length === 0) {\n    return null;\n  }\n\n  return (\n    <div key={productMetadata.type}>\n      <H2>{metadata.title}</H2>\n\n      <CarouselWrapper>\n        {products.map((node) => {\n          return (\n            <PetitsAnimauxProductCard key={node.id} node={node} />\n          );\n        })}\n      </CarouselWrapper>\n    </div>\n  );\n}\n\nconst PetitsAnimaux = (props) => {\n  const { productTypeMapping, products, photos } = props;\n  const normalizedProducts = useMemo(\n    () => {\n      const categories = {};\n\n      products.forEach(product => {\n        const { category } = product;\n        if (productTypeMapping[category]) {\n          if (!categories[category]) {\n            categories[category] = [];\n          }\n\n          categories[category].push({\n            ...product,\n            coverPhoto: photos.find(photo => (photo.description || \"\").trim() === product.coverPhotoId.trim()),\n            dimensions: [\n              product.length ? `Length: ${product.length}` : null,\n              product.width ? `Width: ${product.width}` : null,\n              product.height ? `Height: ${product.height}` : null,\n            ].filter(a => a),\n          });\n        }\n      });\n\n      const res = Object.keys(categories)\n        .filter(key => categories[key].length > 0)\n        .map(key => {\n\n          return {\n            type: key,\n            products: categories[key],\n            metadata: productTypeMapping[key],\n          };\n        });\n\n      return res;\n    },\n    [productTypeMapping, products, photos]\n  );\n\n  return (\n    <div className=\"PetitsAnimauxSection\">\n      <HomeBannerImage />\n\n      <H1>Products</H1>\n\n      {normalizedProducts.map((productMetadata) => {\n        return (\n          <PetitsAnimauxSection \n            key={productMetadata.type} \n            productMetadata={productMetadata} \n          />\n        );\n      })}\n    </div>\n  )\n};\n\nexport default PetitsAnimaux;","import { graphql } from \"gatsby\";\n\nimport React from \"react\";\nimport MainSectionWrapper from \"../layout\";\nimport CommonHead from \"../layout/Head\";\nimport PetitsAnimaux from \"../layout/pages/PetitsAnimauxHome\";\nimport JsonLd from \"../layout/jsonLd\";\n\nconst baseJsonLd = {\n  \"@context\": \"http://schema.org/\",\n  \"@type\": \"Organization\",\n  \"name\": \"CrochetNest\",\n  \"logo\": \"https://crochetnest.com/icons/icon-512x512.png\",\n  \"url\": \"https://crochetnest.com/\",\n  \"description\": \"Discover the unique items that Crochet Nests creates. We sell the best crochet products.\",\n};\n\nconst PageTemplate = (props) => {\n  const {\n    allGoogleSpreadsheetPetitsAnimauxCategories,\n    allGoogleSpreadsheetPetitsAnimauxProducts,\n    allGooglePhotosPhoto,\n  } = props.data;\n  \n  const productTypeMapping = React.useMemo(() => {\n    const productTypeMapping = {};\n    allGoogleSpreadsheetPetitsAnimauxCategories.nodes.forEach((node) => {\n      productTypeMapping[node.category] = {\n        title: node.title,\n      };\n    });\n\n    return productTypeMapping;\n  }, [allGoogleSpreadsheetPetitsAnimauxCategories]);\n\n  const products = allGoogleSpreadsheetPetitsAnimauxProducts.nodes;\n  const photos = React.useMemo(() => {\n    return allGooglePhotosPhoto.nodes.filter(photo => photo.description);\n  }, [allGooglePhotosPhoto]);\n\n  return (\n    <>\n      <MainSectionWrapper>\n        <PetitsAnimaux {...props} \n          productTypeMapping={productTypeMapping} \n          products={products} \n          photos={photos}\n        />\n      </MainSectionWrapper>\n\n      <JsonLd data={baseJsonLd} />\n    </>\n  )\n};\n\nexport function Head(props) {\n  const data = {\n    page: {\n      name: \"Crochet Nest Home\",\n    }\n  };\n\n  return <CommonHead {...props} data={data} />;\n}\n\nexport const query = graphql`\n  query PetitsAnimaux {\n    allGoogleSpreadsheetPetitsAnimauxProducts {\n      nodes {\n        name\n        id\n        price\n        category\n        stripeUrl\n        coverPhotoId\n        width\n        height\n        length\n      }\n    }\n    \n    allGoogleSpreadsheetPetitsAnimauxCategories {\n      nodes {\n        category\n        title\n      }\n    }\n\n    allGooglePhotosPhoto(filter: {album: {title: {eq: \"P2F\"} } }) {\n      nodes {\n        id\n        file {\n          childImageSharp {\n            gatsbyImageData(\n              height: 160\n            )\n          }\n        }\n        description\n      }\n    }\n\n  }\n`;\n\nexport default PageTemplate;"],"names":["getOffsetRect","el","relativeTo","rect","_getOffsetRect","relativeRect","left","top","right","bottom","width","height","getBoundingClientRect","scrollLeft","scrollTop","parentEl","parentElement","getEffectiveScrollSpacing","scrollEl","itemEl","pos","scrollPadding","window","getComputedStyle","getPropertyValue","invalidMsg","endsWith","value","parseInt","assert","Number","isNaN","clientWidth","RSCError","getScrollPaddingUsedValue","scrollMargin","getScrollMarginUsedValue","Math","min","message","Error","constructor","super","props","color","React","role","className","isLeft","Chevron","onClick","cn","IconButton","variant","Arrow","Carousel","isClient","setIsClient","useState","useEffect","activePageIndex","scrollRef","goTo","snapPointIndexes","next","prev","pages","axis","initialPages","dimension","scrollDimension","clientDimension","nearSidePos","farSidePos","scrollPos","setScrollEl","setCarouselState","refreshActivePage","useCallback","pages2","floor","length","items","Array","from","children","scrollPort","offsets","map","page","leadIndex","leadEl","HTMLElement","scrollSpacing","offset","abs","minOffset","nextActivePageIndex","indexOf","refresh","currPageStartPos","reduce","acc","item","i","currPage","ceil","push","useLayoutEffect","handle","addEventListener","removeEventListener","handleGoTo","index","scrollTo","behavior","useMemo","Set","useSnapCarousel","isAtEnd","isAtBeginning","imagesPerPage","start","max","end","ref","style","display","overflow","scrollSnapType","childImg","idx","scrollSnapAlign","has","key","data","useStaticQuery","allGooglePhotosPhoto","coverImg","nodes","GatsbyImage","image","getImage","file","alt","PetitsAnimauxProductCardImg","coverPhoto","name","PetitsAnimauxProductCardDimensions","dimensions","str","node","id","price","stripeUrl","trim","url","GatsyLink","to","H3","StripeBuyButton","PetitsAnimauxSection","productMetadata","metadata","products","type","H2","title","CarouselWrapper","PetitsAnimauxProductCard","productTypeMapping","photos","normalizedProducts","categories","forEach","product","category","find","photo","description","coverPhotoId","filter","a","Object","keys","HomeBannerImage","H1","baseJsonLd","Head","CommonHead","assign","allGoogleSpreadsheetPetitsAnimauxCategories","allGoogleSpreadsheetPetitsAnimauxProducts","MainSectionWrapper","PetitsAnimaux","JsonLd"],"sourceRoot":""}