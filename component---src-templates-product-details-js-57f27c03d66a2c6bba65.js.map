{"version":3,"file":"component---src-templates-product-details-js-57f27c03d66a2c6bba65.js","mappings":"8OAmEA,MA3D4BA,IACxB,MAAM,QAAEC,GAAYD,GACd,WACFE,EAAU,WACVC,EAAU,YACVC,EAAW,KACXC,EAAI,SACJC,EAAQ,MACRC,EAAK,UACLC,GACAP,EAGJQ,QAAQC,MACR,MAAMC,EAAS,CACX,WAAY,yBACZ,QAAS,UACT,MAAS,eACT,KAAQ,iDACR,KAAQN,EACR,SAAYC,EACZ,MAAQ,0BAA2BJ,EAAWU,KAAKC,UACnD,YAAeT,EAAc,IAAMD,EAAWW,KAAK,MACnD,gBAAmB,CACf,QAAS,kBACT,YAAe,IACf,YAAe,MAIvB,OACIC,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACC,EAAAA,EAAkB,KACfD,EAAAA,cAAA,OAAKE,UAAU,+BACXF,EAAAA,cAAA,OAAKE,UAAU,+BACfF,EAAAA,cAACG,EAAAA,EAAW,CACRC,OAAOC,EAAAA,EAAAA,GAASlB,EAAWU,MAC3BS,IAAKhB,KAITU,EAAAA,cAAA,OAAKE,UAAU,gCACXF,EAAAA,cAACO,EAAAA,GAAE,KAAEjB,GACJF,EAAWoB,KAAI,CAACC,EAAKC,IACXV,EAAAA,cAAA,KAAGE,UAAU,2BAA2BS,IAAKD,GAAMD,KAG9DT,EAAAA,cAACY,EAAAA,EAAe,CAACnB,UAAWA,GAAW,QAAMD,MAKzDQ,EAAAA,cAAA,UAAQa,KAAK,uBACRC,KAAKC,UAAUnB,IAErB,ECzCJ,SAASoB,EAAK/B,GAOnB,OAAOe,EAAAA,cAACiB,EAAAA,EAAUC,OAAAC,OAAA,GAAKlC,EAAK,CAAEmC,KANjB,CACXC,KAAM,CACJ/B,KAAM,wBAKZ,CAwCA,MA9DsBL,IACpB,MAAM,0CACJqC,EAAyC,qBACzCC,GACEtC,EAAMmC,KAGJlC,ECdqBsC,EAACtC,EAASuC,KAC5B,IACAvC,EACHC,WAAYsC,EAAOC,MAAKC,IAAUA,EAAMtC,aAAe,IAAIuC,SAAW1C,EAAQ2C,aAAaD,SAC3FxC,WAAY,CACRF,EAAQ4C,OAAM,WAAc5C,EAAQ4C,OAAW,KAC/C5C,EAAQ6C,MAAK,UAAa7C,EAAQ6C,MAAU,KAC5C7C,EAAQ8C,OAAM,WAAc9C,EAAQ8C,OAAW,MACjDC,QAAOC,GAAKA,MDMJV,CADHF,EAA0Ca,MAAM,GACzBZ,EAAqBY,OAEzD,OACEnC,EAAAA,cAACoC,EAAkB,CAAClD,QAASA,GAAW,C","sources":["webpack://wedding/./src/layout/pages/ProductDetailsPage/index.js","webpack://wedding/./src/templates/productDetails.js","webpack://wedding/./src/graphql/products.js"],"sourcesContent":["import React from \"react\";\nimport { H1 } from \"../../components/Header\";\nimport MainSectionWrapper from \"../../index\";\nimport StripeBuyButton from \"../../components/StripeBuyButton\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport \"./styles.scss\";\n\nconst ProductDetailsPage = (props) => {\n    const { product } = props;\n    const {\n        coverPhoto,\n        dimensions,\n        description,\n        name,\n        category,\n        price,\n        stripeUrl,\n    } = product;\n\n    \n    console.log();\n    const ldJson = {\n        \"@context\": \"https://www.schema.org\",\n        \"@type\": \"product\",\n        \"brand\": \"Crochet Nest\",\n        \"logo\": \"https://crochetnest.com/icons/icon-512x512.png\",\n        \"name\": name,\n        \"category\": category,\n        \"image\": `https://crochetnest.com${coverPhoto.file.publicURL}`,\n        \"description\": description + '.' + dimensions.join(', '),\n        \"aggregateRating\": {\n            \"@type\": \"aggregateRating\",\n            \"ratingValue\": \"5\",\n            \"reviewCount\": \"0\"\n        }\n    };\n\n    return (\n        <>\n            <MainSectionWrapper>\n                <div className=\"ProductDetailsPageContainer\">\n                    <div className=\"ProductDetailsProductImages\">\n                    <GatsbyImage\n                        image={getImage(coverPhoto.file)}\n                        alt={name}\n                    />\n                    </div>\n\n                    <div className=\"ProductDetailsProductDetails\">\n                        <H1>{name}</H1>\n                        {dimensions.map((str, idx) => {\n                            return <p className=\"PetitsAnimauxDescription\" key={idx}>{str}</p>\n                        })}\n\n                        <StripeBuyButton stripeUrl={stripeUrl}>USD ${price}</StripeBuyButton>\n                    </div>\n                </div>\n\n            </MainSectionWrapper>\n            <script type='application/ld+json'> \n                {JSON.stringify(ldJson)}\n            </script>\n        </>\n    )\n};\n\nexport default ProductDetailsPage;","import { graphql } from \"gatsby\";\n\nimport React from \"react\";\nimport CommonHead from \"../layout/Head\";\nimport ProductDetailsPage from \"../layout/pages/ProductDetailsPage\";\n\nimport {formatProduct} from \"../graphql/products\";\n\nconst PageTemplate = (props) => {\n  const {\n    allGoogleSpreadsheetPetitsAnimauxProducts,\n    allGooglePhotosPhoto,\n  } = props.data;\n  \n  const data = allGoogleSpreadsheetPetitsAnimauxProducts.nodes[0];\n  const product = formatProduct(data, allGooglePhotosPhoto.nodes);\n\n  return (\n    <ProductDetailsPage product={product} />\n  )\n};\n\nexport function Head(props) {\n  const data = {\n    page: {\n      name: \"Crochet Nest Home\",\n    }\n  };\n\n  return <CommonHead {...props} data={data} />;\n}\n\nexport const query = graphql`\n  query PetitsAnimaux($id: String!) {\n    allGoogleSpreadsheetPetitsAnimauxProducts(filter: {id: {eq: $id}}) {\n      nodes {\n        name\n        id\n        price\n        category\n        description \n        stripeUrl\n        coverPhotoId\n        width\n        height\n        length\n      }\n    }\n    \n    allGooglePhotosPhoto(filter: {album: {title: {eq: \"P2F\"} } }) {\n      nodes {\n        id\n        file {\n          childImageSharp {\n            gatsbyImageData(\n              height: 500\n              formats: [AUTO, WEBP]\n              quality: 95\n              placeholder: NONE\n            )\n          }\n          publicURL\n        }\n        description\n      }\n    }\n\n  }\n`;\n\nexport default PageTemplate;","\nexport const formatProduct = (product, photos) => {\n    return {\n        ...product,\n        coverPhoto: photos.find(photo => (photo.description || \"\").trim() === product.coverPhotoId.trim()),\n        dimensions: [\n            product.length ? `Length: ${product.length}` : null,\n            product.width ? `Width: ${product.width}` : null,\n            product.height ? `Height: ${product.height}` : null,\n        ].filter(a => a),\n    }\n}\n"],"names":["props","product","coverPhoto","dimensions","description","name","category","price","stripeUrl","console","log","ldJson","file","publicURL","join","React","MainSectionWrapper","className","GatsbyImage","image","getImage","alt","H1","map","str","idx","key","StripeBuyButton","type","JSON","stringify","Head","CommonHead","Object","assign","data","page","allGoogleSpreadsheetPetitsAnimauxProducts","allGooglePhotosPhoto","formatProduct","photos","find","photo","trim","coverPhotoId","length","width","height","filter","a","nodes","ProductDetailsPage"],"sourceRoot":""}