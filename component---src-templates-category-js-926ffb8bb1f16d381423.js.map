{"version":3,"file":"component---src-templates-category-js-926ffb8bb1f16d381423.js","mappings":"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","sources":["webpack://wedding/./src/layout/components/HomeProductCard/index.js","webpack://wedding/./src/layout/pages/CategoryPage/index.js","webpack://wedding/./src/templates/category.js"],"sourcesContent":["import React from \"react\";\nimport { H3 } from \"../Header\";\nimport { Link as GatsyLink } from \"gatsby\";\nimport StripeBuyButton from \"../StripeBuyButton\";\n\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport \"./styles.scss\";\n\nconst PetitsAnimauxProductCardImg = (props) => {\n    const {coverPhoto, name} = props;\n\n    return (\n        <div className=\"PetitsAnimauxCardImage\">\n            <GatsbyImage\n                image={getImage(coverPhoto.file)}\n                alt={name}\n            />\n        </div> \n    );\n}\n\nconst PetitsAnimauxProductCardDimensions = (props) => {\n    const {dimensions} = props;\n    return (\n        <>\n            {dimensions.map((str, idx) => {\n                return <p className=\"PetitsAnimauxDescription\" key={idx}>{str}</p>\n            })}\n        </>\n    );\n}\n\nconst PetitsAnimauxProductCard = (props) => {\n    const { node } = props;\n\n    const {id, price, stripeUrl} = node;\n    const name = node.name.trim();\n    const url = (\"/product/\" + id).trim();\n\n    return (\n        <div className=\"PetitsAnimauxCardContainer\">\n            <div className=\"PetitsAnimauxCard\">\n\n                <GatsyLink className=\"PetitsAnimauxCardLink\" to={url}>\n                    <PetitsAnimauxProductCardImg coverPhoto={node.coverPhoto} name={name} />\n                    <H3 className=\"PetitsAnimauxCardTitle\">{name}</H3>\n                    <PetitsAnimauxProductCardDimensions dimensions={node.dimensions} />\n                </GatsyLink>\n                \n                <StripeBuyButton stripeUrl={stripeUrl} price={price} />\n            </div>\n        </div>\n    );\n}\n\nexport default PetitsAnimauxProductCard;","import React, { useMemo } from \"react\";\nimport { H1 } from \"../../components/Header\";\nimport CarouselWrapper from \"../../components/Carousel\";\nimport PetitsAnimauxProductCard from \"../../components/HomeProductCard\";\n\nimport \"./styles.scss\";\n\nconst Section = (props) => {\n  const {productMetadata} = props;\n  if (!productMetadata) {\n    return null;\n  }\n\n  const { products } = productMetadata;\n  if (products.length === 0) {\n    return null;\n  }\n\n  return (\n    <div key={productMetadata.type}>\n      <CarouselWrapper>\n        {products.map((node) => {\n          return (\n            <PetitsAnimauxProductCard key={node.id} node={node} />\n          );\n        })}\n      </CarouselWrapper>\n    </div>\n  );\n}\n\nconst CategoryPage = (props) => {\n  const { categoryName, productTypeMapping, products, photos } = props;\n  const normalizedProducts = useMemo(\n    () => {\n      const categories = {};\n      products.forEach(product => {\n        const { category } = product;\n        if (productTypeMapping[category]) {\n          if (!categories[category]) {\n            categories[category] = [];\n          }\n\n          categories[category].push({\n            ...product,\n            coverPhoto: photos.find(photo => (photo.description || \"\").trim() === product.coverPhotoId.trim()),\n            dimensions: [\n              product.length ? `Length: ${product.length}` : null,\n              product.width ? `Width: ${product.width}` : null,\n              product.height ? `Height: ${product.height}` : null,\n            ].filter(a => a),\n          });\n        }\n      });\n\n      const res = Object.keys(categories)\n        .filter(key => categories[key].length > 0)\n        .map(key => {\n\n          return {\n            type: key,\n            products: categories[key],\n            metadata: productTypeMapping[key],\n          };\n        });\n\n      return res;\n    },\n    [productTypeMapping, products, photos]\n  );\n\n  return (\n    <div className=\"CategoryPage\">\n\n      <H1>Shop for {categoryName}</H1>\n\n      <Section \n        productMetadata={normalizedProducts[0]} \n      />\n    </div>\n  )\n};\n\nexport default CategoryPage;","import { graphql } from \"gatsby\";\n\nimport React from \"react\";\nimport MainSectionWrapper from \"../layout\";\nimport CommonHead from \"../layout/Head\";\nimport CategoryPage from \"../layout/pages/CategoryPage\";\nimport JsonLd from \"../layout/jsonLd\";\n\nconst baseJsonLd = {\n  \"@context\": \"http://schema.org/\",\n  \"@type\": \"Organization\",\n  \"name\": \"CrochetNest\",\n  \"logo\": \"https://crochetnest.com/icons/icon-512x512.png\",\n  \"url\": \"https://crochetnest.com/\",\n  \"description\": \"Discover the unique items that Crochet Nests creates. We sell the best crochet products.\",\n};\n\nconst PageTemplate = (props) => {\n    const {\n    allGoogleSpreadsheetPetitsAnimauxCategories,\n    allGoogleSpreadsheetPetitsAnimauxProducts,\n    allGooglePhotosPhoto,\n  } = props.data;\n  const productTypeMapping = React.useMemo(() => {\n    const productTypeMapping = {};\n    allGoogleSpreadsheetPetitsAnimauxCategories.nodes.forEach((node) => {\n      productTypeMapping[node.category] = {\n        title: node.title,\n      };\n    });\n\n    return productTypeMapping;\n  }, [allGoogleSpreadsheetPetitsAnimauxCategories]);\n\n  const products = allGoogleSpreadsheetPetitsAnimauxProducts.nodes;\n  const photos = React.useMemo(() => {\n    return allGooglePhotosPhoto.nodes.filter(photo => photo.description);\n  }, [allGooglePhotosPhoto]);\n\n  return (\n    <>\n      <MainSectionWrapper>\n        <CategoryPage {...props} \n            categoryName={props.pageContext.categoryName}\n            productTypeMapping={productTypeMapping} \n            products={products} \n            photos={photos}\n        />\n      </MainSectionWrapper>\n\n      <JsonLd data={baseJsonLd} />\n    </>\n  )\n};\n\nexport function Head(props) {\n    const name = props.pageContext.categoryName;\n    const data = {\n        page: {\n            name, \n        }\n    };\n\n    return <CommonHead {...props} data={data} />;\n}\n\nexport const query = graphql`\n  query PetitsAnimaux($category: String!) {\n    allGoogleSpreadsheetPetitsAnimauxProducts {\n      nodes {\n        name\n        id\n        price\n        category\n        stripeUrl\n        coverPhotoId\n        width\n        height\n        length\n      }\n    }\n    \n    allGoogleSpreadsheetPetitsAnimauxCategories(filter: { category: {eq: $category }}) {\n        nodes {\n            id\n            category\n            title\n        }\n    }\n\n    allGooglePhotosPhoto(filter: {album: {title: {eq: \"P2F\"} } }) {\n      nodes {\n        id\n        file {\n          childImageSharp {\n            gatsbyImageData(\n              height: 160\n            )\n          }\n        }\n        description\n      }\n    }\n\n  }\n`;\n\nexport default PageTemplate;"],"names":["PetitsAnimauxProductCardImg","props","coverPhoto","name","React","className","GatsbyImage","image","getImage","file","alt","PetitsAnimauxProductCardDimensions","dimensions","map","str","idx","key","node","id","price","stripeUrl","trim","url","GatsyLink","to","H3","StripeBuyButton","Section","productMetadata","products","length","type","CarouselWrapper","PetitsAnimauxProductCard","categoryName","productTypeMapping","photos","normalizedProducts","useMemo","categories","forEach","product","category","push","find","photo","description","coverPhotoId","width","height","filter","a","Object","keys","metadata","H1","baseJsonLd","Head","data","page","pageContext","CommonHead","assign","allGoogleSpreadsheetPetitsAnimauxCategories","allGoogleSpreadsheetPetitsAnimauxProducts","allGooglePhotosPhoto","nodes","title","MainSectionWrapper","CategoryPage","JsonLd"],"sourceRoot":""}