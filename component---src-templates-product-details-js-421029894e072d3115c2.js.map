{"version":3,"file":"component---src-templates-product-details-js-421029894e072d3115c2.js","mappings":"wPASA,MAAMA,EAAa,CACf,WAAY,yBACZ,QAAS,UACT,MAAS,eACT,KAAQ,iDACR,gBAAmB,CACf,QAAS,kBACT,YAAe,IACf,YAAe,OAoDvB,MAhD4BC,IACxB,MAAM,QAAEC,GAAYD,GACd,WACFE,EAAU,WACVC,EAAU,YACVC,EAAW,KACXC,EAAI,SACJC,EAAQ,MACRC,EAAK,UACLC,GACAP,EAEEQ,EAAS,IACRV,EACH,KAAQM,EACR,SAAYC,EACZ,MAAQ,0BAA2BJ,EAAWQ,KAAKC,UACnD,YAAeP,EAAc,IAAMD,EAAWS,KAAK,OAGvD,OACIC,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACC,EAAAA,EAAkB,KACfD,EAAAA,cAAA,OAAKE,UAAU,+BACXF,EAAAA,cAAA,OAAKE,UAAU,+BACfF,EAAAA,cAACG,EAAAA,EAAW,CACRC,OAAOC,EAAAA,EAAAA,GAAShB,EAAWQ,MAC3BS,IAAKd,KAITQ,EAAAA,cAAA,OAAKE,UAAU,gCACXF,EAAAA,cAACO,EAAAA,GAAE,KAAEf,GACJF,EAAWkB,KAAI,CAACC,EAAKC,IACXV,EAAAA,cAAA,KAAGE,UAAU,2BAA2BS,IAAKD,GAAMD,KAG9DT,EAAAA,cAACY,EAAAA,EAAe,CAACjB,UAAWA,EAAWD,MAAOA,OAM1DM,EAAAA,cAACa,EAAAA,EAAM,CAACC,KAAMlB,IACf,EC3CJ,SAASmB,EAAK5B,GAOnB,OAAOa,EAAAA,cAACgB,EAAAA,EAAUC,OAAAC,OAAA,GAAK/B,EAAK,CAAE2B,KANjB,CACXK,KAAM,CACJ3B,KAAM,wBAKZ,CAqCA,MA3DsBL,IACpB,MAAM,0CACJiC,EAAyC,qBACzCC,GACElC,EAAM2B,KAGJ1B,ECdqBkC,EAAClC,EAASmC,KAC5B,IACAnC,EACHC,WAAYkC,EAAOC,MAAKC,IAAUA,EAAMlC,aAAe,IAAImC,SAAWtC,EAAQuC,aAAaD,SAC3FpC,WAAY,CACRF,EAAQwC,OAAM,WAAcxC,EAAQwC,OAAW,KAC/CxC,EAAQyC,MAAK,UAAazC,EAAQyC,MAAU,KAC5CzC,EAAQ0C,OAAM,WAAc1C,EAAQ0C,OAAW,MACjDC,QAAOC,GAAKA,MDMJV,CADHF,EAA0Ca,MAAM,GACzBZ,EAAqBY,OAEzD,OACEjC,EAAAA,cAACkC,EAAkB,CAAC9C,QAASA,GAAW,C","sources":["webpack://wedding/./src/layout/pages/ProductDetailsPage/index.js","webpack://wedding/./src/templates/productDetails.js","webpack://wedding/./src/graphql/products.js"],"sourcesContent":["import React from \"react\";\nimport { H1 } from \"../../components/Header\";\nimport MainSectionWrapper from \"../../index\";\nimport StripeBuyButton from \"../../components/StripeBuyButton\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport JsonLd from \"../../jsonLd\";\n\nimport \"./styles.scss\";\n\nconst baseLdJson = {\n    \"@context\": \"https://www.schema.org\",\n    \"@type\": \"product\",\n    \"brand\": \"Crochet Nest\",\n    \"logo\": \"https://crochetnest.com/icons/icon-512x512.png\",\n    \"aggregateRating\": {\n        \"@type\": \"aggregateRating\",\n        \"ratingValue\": \"5\",\n        \"reviewCount\": \"24\"\n    }\n};\n\nconst ProductDetailsPage = (props) => {\n    const { product } = props;\n    const {\n        coverPhoto,\n        dimensions,\n        description,\n        name,\n        category,\n        price,\n        stripeUrl,\n    } = product;\n\n    const ldJson = {\n        ...baseLdJson,\n        \"name\": name,\n        \"category\": category,\n        \"image\": `https://crochetnest.com${coverPhoto.file.publicURL}`,\n        \"description\": description + '.' + dimensions.join(', '),\n    };\n\n    return (\n        <>\n            <MainSectionWrapper>\n                <div className=\"ProductDetailsPageContainer\">\n                    <div className=\"ProductDetailsProductImages\">\n                    <GatsbyImage\n                        image={getImage(coverPhoto.file)}\n                        alt={name}\n                    />\n                    </div>\n\n                    <div className=\"ProductDetailsProductDetails\">\n                        <H1>{name}</H1>\n                        {dimensions.map((str, idx) => {\n                            return <p className=\"PetitsAnimauxDescription\" key={idx}>{str}</p>\n                        })}\n\n                        <StripeBuyButton stripeUrl={stripeUrl} price={price} />\n                    </div>\n                </div>\n\n            </MainSectionWrapper>\n\n            <JsonLd data={ldJson} />\n        </>\n    )\n};\n\nexport default ProductDetailsPage;","import { graphql } from \"gatsby\";\n\nimport React from \"react\";\nimport CommonHead from \"../layout/Head\";\nimport ProductDetailsPage from \"../layout/pages/ProductDetailsPage\";\n\nimport {formatProduct} from \"../graphql/products\";\n\nconst PageTemplate = (props) => {\n  const {\n    allGoogleSpreadsheetPetitsAnimauxProducts,\n    allGooglePhotosPhoto,\n  } = props.data;\n  \n  const data = allGoogleSpreadsheetPetitsAnimauxProducts.nodes[0];\n  const product = formatProduct(data, allGooglePhotosPhoto.nodes);\n\n  return (\n    <ProductDetailsPage product={product} />\n  )\n};\n\nexport function Head(props) {\n  const data = {\n    page: {\n      name: \"Crochet Nest Home\",\n    }\n  };\n\n  return <CommonHead {...props} data={data} />;\n}\n\nexport const query = graphql`\n  query PetitsAnimaux($id: String!) {\n    allGoogleSpreadsheetPetitsAnimauxProducts(filter: {id: {eq: $id}}) {\n      nodes {\n        name\n        id\n        price\n        category\n        description \n        stripeUrl\n        coverPhotoId\n        width\n        height\n        length\n      }\n    }\n    \n    allGooglePhotosPhoto(filter: {album: {title: {eq: \"P2F\"} } }) {\n      nodes {\n        id\n        file {\n          childImageSharp {\n            gatsbyImageData(\n              height: 500\n            )\n          }\n          publicURL\n        }\n        description\n      }\n    }\n\n  }\n`;\n\nexport default PageTemplate;","\nexport const formatProduct = (product, photos) => {\n    return {\n        ...product,\n        coverPhoto: photos.find(photo => (photo.description || \"\").trim() === product.coverPhotoId.trim()),\n        dimensions: [\n            product.length ? `Length: ${product.length}` : null,\n            product.width ? `Width: ${product.width}` : null,\n            product.height ? `Height: ${product.height}` : null,\n        ].filter(a => a),\n    }\n}\n"],"names":["baseLdJson","props","product","coverPhoto","dimensions","description","name","category","price","stripeUrl","ldJson","file","publicURL","join","React","MainSectionWrapper","className","GatsbyImage","image","getImage","alt","H1","map","str","idx","key","StripeBuyButton","JsonLd","data","Head","CommonHead","Object","assign","page","allGoogleSpreadsheetPetitsAnimauxProducts","allGooglePhotosPhoto","formatProduct","photos","find","photo","trim","coverPhotoId","length","width","height","filter","a","nodes","ProductDetailsPage"],"sourceRoot":""}