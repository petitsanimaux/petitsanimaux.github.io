{"version":3,"file":"component---src-templates-product-details-js-ddad9152d0a3d0dba979.js","mappings":"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","sources":["webpack://wedding/./src/graphql/products.js","webpack://wedding/./src/layout/pages/ProductDetailsPage/index.js","webpack://wedding/./src/templates/productDetails.js"],"sourcesContent":["\nexport const formatProduct = (product, photos) => {\n    return {\n        ...product,\n        coverPhoto: photos.find(photo => (photo.description || \"\").trim() === product.coverPhotoId.trim()),\n        dimensions: [\n            product.length ? `Length: ${product.length}` : null,\n            product.width ? `Width: ${product.width}` : null,\n            product.height ? `Height: ${product.height}` : null,\n        ].filter(a => a),\n    }\n}\n","import React from \"react\";\nimport { H1, H2 } from \"../../components/Header\";\nimport MainSectionWrapper from \"../../index\";\nimport StripeBuyButton from \"../../components/StripeBuyButton\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport JsonLd from \"../../jsonLd\";\n\nimport \"./styles.scss\";\n\nconst baseLdJson = {\n    \"@context\": \"https://www.schema.org\",\n    \"@type\": \"product\",\n    \"brand\": \"Crochet Nest\",\n    \"logo\": \"https://crochetnest.com/icons/icon-512x512.png\",\n    \"aggregateRating\": {\n        \"@type\": \"aggregateRating\",\n        \"ratingValue\": \"5\",\n        \"reviewCount\": \"24\"\n    }\n};\n\nconst ShippingDisclaimer = () => {\n    return (\n        <div>\n            <p><b>Made to order, will ship in 1 - 2 weeks.</b></p>\n            <p>Note: Each item is made with highest care and attention to details. However due to the nature of handmade items, slight differences may show from the pictures.</p>\n            <p><i>Gentle use is recommended</i></p>\n        </div>\n    );\n}\n\nconst ProductDetailsImages = (props) => {\n    const { coverPhoto, name } = props;\n\n    const images = [\n        coverPhoto,\n        coverPhoto,\n        coverPhoto,\n    ];\n\n    const imagesToShow = images.slice(0, 3);\n    return (\n        <div className=\"ProductDetailsPhotoContainer\">\n            <div className=\"ProductDetailsMainPhotoContainer\">\n                <GatsbyImage\n                    key={imagesToShow[0]}\n                    image={getImage(imagesToShow[0].file)}\n                    alt={name}\n                />\n            </div>\n            <div className=\"ProductDetailsSecondaryPhotoContainer\">\n                <div className=\"ProductDetailsSecondaryPhoto\">\n                    <GatsbyImage\n                            key={imagesToShow[1]}\n                            image={getImage(imagesToShow[1].file)}\n                            alt={name}\n                        />\n                </div>\n                <div className=\"ProductDetailsSecondaryPhoto\">\n                    <GatsbyImage\n                        key={imagesToShow[2]}\n                        image={getImage(imagesToShow[2].file)}\n                        alt={name}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst ProductDetailsInfo = (props) => {\n    const {id, name, materialDescription, description, dimensions, priceId, stripeUrl, price} = props;\n\n    const flattenedDimensions = dimensions.reduce((accum, str, idx) => {\n        if (idx + 1 === dimensions.length) {\n            return accum + str\n        }                  \n        return `${accum} ${str}, `;\n    }, '')\n\n    return (\n        <div className=\"ProductDetailsProductDetails\">\n            <div className=\"ProductDetailsPricingDetails\">\n                <H1>{name}</H1>\n                <H2 className=\"Price\">${price} USD</H2>\n                <StripeBuyButton priceId={priceId} stripeUrl={stripeUrl} id={id} />\n            </div>\n\n            <p className=\"ProductDescription\">\n                {description}\n            </p>\n\n            {dimensions && dimensions.length > 0 &&\n                <p>\n                    Dimensions: {flattenedDimensions}\n                </p>\n            }\n\n            <p className=\"ProductDescription\">\n                {materialDescription}\n            </p>\n\n            <ShippingDisclaimer />\n\n\n        </div>\n    );\n}\n\nconst ProductDetailsPage = (props) => {\n    const { product } = props;\n    const {\n        coverPhoto,\n        dimensions,\n        description,\n        name,\n        category,\n    } = product;\n\n\n    const ldJson = {\n        ...baseLdJson,\n        \"name\": name,\n        \"category\": category,\n        \"image\": `https://crochetnest.com${coverPhoto.file.publicURL}`,\n        \"description\": description + '.' + dimensions.join(', '),\n    };\n\n    return (\n        <>\n            <MainSectionWrapper>\n                <div className=\"ProductDetailsPageContainer\">\n                    <ProductDetailsImages \n                        coverPhoto={coverPhoto} \n                        name={name}\n                    />\n\n                    <ProductDetailsInfo\n                        {...product}\n                    />\n                </div>\n\n            </MainSectionWrapper>\n\n            <JsonLd data={ldJson} />\n        </>\n    )\n};\n\nexport default ProductDetailsPage;","import { graphql } from \"gatsby\";\n\nimport React from \"react\";\nimport CommonHead from \"../layout/Head\";\nimport ProductDetailsPage from \"../layout/pages/ProductDetailsPage\";\n\nimport {formatProduct} from \"../graphql/products\";\n\nconst PageTemplate = (props) => {\n  const {\n    allGoogleSpreadsheetPetitsAnimauxProducts,\n    allGooglePhotosPhoto,\n  } = props.data;\n  \n  const data = allGoogleSpreadsheetPetitsAnimauxProducts.nodes[0];\n  const product = formatProduct(data, allGooglePhotosPhoto.nodes);\n\n  return (\n    <ProductDetailsPage product={product} />\n  )\n};\n\nexport function Head(props) {\n  const {\n    allGoogleSpreadsheetPetitsAnimauxProducts,\n  } = props.data;\n  const node = allGoogleSpreadsheetPetitsAnimauxProducts.nodes[0];\n\n  const data = {\n    page: {\n      name: node.name,\n    }\n  };\n\n  return <CommonHead {...props} data={data} />;\n}\n\nexport const query = graphql`\n  query PetitsAnimaux($id: String!) {\n    allGoogleSpreadsheetPetitsAnimauxProducts(filter: {id: {eq: $id}}) {\n      nodes {\n        name\n        id\n        price\n        category\n        description \n        materialDescription \n        stripeUrl\n        coverPhotoId\n        priceId \n        width\n        height\n        length\n      }\n    }\n    \n    allGooglePhotosPhoto(filter: {album: {title: {eq: \"P2F\"} } }) {\n      nodes {\n        id\n        file {\n          childImageSharp {\n            gatsbyImageData(\n              height: 500\n            )\n          }\n          publicURL\n        }\n        description\n      }\n    }\n\n  }\n`;\n\nexport default PageTemplate;"],"names":["formatProduct","product","photos","coverPhoto","find","photo","description","trim","coverPhotoId","dimensions","length","width","height","filter","a","baseLdJson","ShippingDisclaimer","React","ProductDetailsImages","props","name","imagesToShow","slice","className","GatsbyImage","key","image","getImage","file","alt","ProductDetailsInfo","id","materialDescription","priceId","stripeUrl","price","flattenedDimensions","reduce","accum","str","idx","H1","H2","StripeBuyButton","category","ldJson","publicURL","join","MainSectionWrapper","JsonLd","data","Head","allGoogleSpreadsheetPetitsAnimauxProducts","page","nodes","CommonHead","Object","assign","allGooglePhotosPhoto","ProductDetailsPage"],"sourceRoot":""}