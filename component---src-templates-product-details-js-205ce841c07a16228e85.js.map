{"version":3,"file":"component---src-templates-product-details-js-205ce841c07a16228e85.js","mappings":"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","sources":["webpack://wedding/./src/layout/pages/ProductDetailsPage/index.js","webpack://wedding/./src/templates/productDetails.js","webpack://wedding/./src/graphql/products.js"],"sourcesContent":["import React from \"react\";\nimport { H1, H2 } from \"../../components/Header\";\nimport MainSectionWrapper from \"../../index\";\nimport StripeBuyButton from \"../../components/StripeBuyButton\";\nimport Carousel from \"../../components/Carousel\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport JsonLd from \"../../jsonLd\";\n\nimport \"./styles.scss\";\n\nconst baseLdJson = {\n    \"@context\": \"https://www.schema.org\",\n    \"@type\": \"product\",\n    \"brand\": \"Crochet Nest\",\n    \"logo\": \"https://crochetnest.com/icons/icon-512x512.png\",\n    \"aggregateRating\": {\n        \"@type\": \"aggregateRating\",\n        \"ratingValue\": \"5\",\n        \"reviewCount\": \"24\"\n    }\n};\n\nconst ShippingDisclaimer = () => {\n    return (\n        <div>\n            <p><b>Made to order, will ship in 1 - 2 weeks.</b></p>\n            <p>Note: Each item is made with highest care and attention to details. However due to the nature of handmade items, slight differences may show from the pictures.</p>\n            <p><i>Gentle use is recommended</i></p>\n        </div>\n    );\n}\n\nconst ProductDetailsImages = (props) => {\n    const { coverPhoto, name } = props;\n\n    const images = [\n        coverPhoto,\n        coverPhoto,\n        coverPhoto,\n    ];\n\n    const imagesToShow = images.slice(0, 3);\n    return (\n        <div className=\"ProductDetailsPhotoContainer\">\n            <div className=\"ProductDetailsMainPhotoContainer\">\n                <GatsbyImage\n                    key={imagesToShow[0]}\n                    image={getImage(imagesToShow[0].file)}\n                    alt={name}\n                />\n            </div>\n            <div className=\"ProductDetailsSecondaryPhotoContainer\">\n                <div className=\"ProductDetailsSecondaryPhoto\">\n                    <GatsbyImage\n                            key={imagesToShow[1]}\n                            image={getImage(imagesToShow[1].file)}\n                            alt={name}\n                        />\n                </div>\n                <div className=\"ProductDetailsSecondaryPhoto\">\n                    <GatsbyImage\n                        key={imagesToShow[2]}\n                        image={getImage(imagesToShow[2].file)}\n                        alt={name}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst ProductDetailsInfo = (props) => {\n    const {name, materialDescription, description, dimensions, stripeUrl, price} = props;\n\n    const flattenedDimensions = dimensions.reduce((accum, str, idx) => {\n        if (idx + 1 === dimensions.length) {\n            return accum + str\n        }                  \n        return `${accum} ${str}, `;\n    }, '')\n\n    return (\n        <div className=\"ProductDetailsProductDetails\">\n            <div className=\"ProductDetailsPricingDetails\">\n                <H1>{name}</H1>\n                <H2 className=\"Price\">${price} USD</H2>\n                <StripeBuyButton stripeUrl={stripeUrl} />\n            </div>\n\n            <p className=\"ProductDescription\">\n                {description}\n            </p>\n\n            {dimensions && dimensions.length > 0 &&\n                <p>\n                    Dimensions: {flattenedDimensions}\n                </p>\n            }\n\n            <p className=\"ProductDescription\">\n                {materialDescription}\n            </p>\n\n            <ShippingDisclaimer />\n\n\n        </div>\n    );\n}\n\nconst ProductDetailsPage = (props) => {\n    const { product } = props;\n    const {\n        coverPhoto,\n        dimensions,\n        description,\n        name,\n        category,\n    } = product;\n\n    const ldJson = {\n        ...baseLdJson,\n        \"name\": name,\n        \"category\": category,\n        \"image\": `https://crochetnest.com${coverPhoto.file.publicURL}`,\n        \"description\": description + '.' + dimensions.join(', '),\n    };\n\n    return (\n        <>\n            <MainSectionWrapper>\n                <div className=\"ProductDetailsPageContainer\">\n                    <ProductDetailsImages \n                        coverPhoto={coverPhoto} \n                        name={name}\n                    />\n\n                    <ProductDetailsInfo\n                        {...product}\n                    />\n                </div>\n\n            </MainSectionWrapper>\n\n            <JsonLd data={ldJson} />\n        </>\n    )\n};\n\nexport default ProductDetailsPage;","import { graphql } from \"gatsby\";\n\nimport React from \"react\";\nimport CommonHead from \"../layout/Head\";\nimport ProductDetailsPage from \"../layout/pages/ProductDetailsPage\";\n\nimport {formatProduct} from \"../graphql/products\";\n\nconst PageTemplate = (props) => {\n  const {\n    allGoogleSpreadsheetPetitsAnimauxProducts,\n    allGooglePhotosPhoto,\n  } = props.data;\n  \n  const data = allGoogleSpreadsheetPetitsAnimauxProducts.nodes[0];\n  const product = formatProduct(data, allGooglePhotosPhoto.nodes);\n\n  return (\n    <ProductDetailsPage product={product} />\n  )\n};\n\nexport function Head(props) {\n  const {\n    allGoogleSpreadsheetPetitsAnimauxProducts,\n  } = props.data;\n  const node = allGoogleSpreadsheetPetitsAnimauxProducts.nodes[0];\n\n  const data = {\n    page: {\n      name: node.name,\n    }\n  };\n\n  return <CommonHead {...props} data={data} />;\n}\n\nexport const query = graphql`\n  query PetitsAnimaux($id: String!) {\n    allGoogleSpreadsheetPetitsAnimauxProducts(filter: {id: {eq: $id}}) {\n      nodes {\n        name\n        id\n        price\n        category\n        description \n        materialDescription \n        stripeUrl\n        coverPhotoId\n        width\n        height\n        length\n      }\n    }\n    \n    allGooglePhotosPhoto(filter: {album: {title: {eq: \"P2F\"} } }) {\n      nodes {\n        id\n        file {\n          childImageSharp {\n            gatsbyImageData(\n              height: 500\n            )\n          }\n          publicURL\n        }\n        description\n      }\n    }\n\n  }\n`;\n\nexport default PageTemplate;","\nexport const formatProduct = (product, photos) => {\n    return {\n        ...product,\n        coverPhoto: photos.find(photo => (photo.description || \"\").trim() === product.coverPhotoId.trim()),\n        dimensions: [\n            product.length ? `Length: ${product.length}` : null,\n            product.width ? `Width: ${product.width}` : null,\n            product.height ? `Height: ${product.height}` : null,\n        ].filter(a => a),\n    }\n}\n"],"names":["baseLdJson","ShippingDisclaimer","React","ProductDetailsImages","props","coverPhoto","name","imagesToShow","slice","className","GatsbyImage","key","image","getImage","file","alt","ProductDetailsInfo","materialDescription","description","dimensions","stripeUrl","price","flattenedDimensions","reduce","accum","str","idx","length","H1","H2","StripeBuyButton","product","category","ldJson","publicURL","join","MainSectionWrapper","JsonLd","data","Head","allGoogleSpreadsheetPetitsAnimauxProducts","page","nodes","CommonHead","Object","assign","allGooglePhotosPhoto","formatProduct","photos","find","photo","trim","coverPhotoId","width","height","filter","a","ProductDetailsPage"],"sourceRoot":""}