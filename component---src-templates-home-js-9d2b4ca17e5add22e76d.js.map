{"version":3,"file":"component---src-templates-home-js-9d2b4ca17e5add22e76d.js","mappings":"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","sources":["webpack://wedding/../src/image-utils.ts","webpack://wedding/../src/components/hooks.ts","webpack://wedding/../src/components/layout-wrapper.tsx","webpack://wedding/../src/components/picture.tsx","webpack://wedding/../src/components/placeholder.tsx","webpack://wedding/../src/components/main-image.tsx","webpack://wedding/../src/components/gatsby-image.server.tsx","webpack://wedding/../src/components/gatsby-image.browser.tsx","webpack://wedding/../src/components/static-image.server.tsx","webpack://wedding/../src/components/static-image.tsx","webpack://wedding/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://wedding/./src/layout/components/Footer/index.js","webpack://wedding/./src/layout/index.js","webpack://wedding/./src/layout/components/Head/index.js","webpack://wedding/./src/classnames/index.js","webpack://wedding/./src/layout/components/Header/index.js","webpack://wedding/./src/layout/components/Link/index.js","webpack://wedding/./node_modules/react-snap-carousel/dist/use-snap-carousel.mjs","webpack://wedding/./src/icons/arrow/index.js","webpack://wedding/./src/layout/components/Carousel/index.js","webpack://wedding/./src/images/petit_animal.jpg","webpack://wedding/./src/layout/components/PetitsAnimauxHome/index.js","webpack://wedding/./src/templates/home.js","webpack://wedding/./node_modules/querystringify/index.js","webpack://wedding/./node_modules/requires-port/index.js","webpack://wedding/./node_modules/url-parse/index.js"],"sourcesContent":["import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport \"./styles.scss\";\n\nexport function PageFooter() {\n    const now = moment().year();\n\n    return (\n        <footer className=\"PageFooter\">\n            <div className=\"PageFooterInner\">\n                <p>\n                    {`Copyright ${now} © CrochetNest. All rights reserved.`}\n                </p>\n            </div>\n        </footer>\n    )\n}\n\nexport default PageFooter;","import React from \"react\";\nimport PageFooter from \"./components/Footer\";\n\nimport \"./styles.scss\";\n\nexport const MainSectionWrapper = (props) => {\n  return (\n    <>\n      <main className=\"MainSection\">\n        <div className=\"MainSectionInner\">\n          {props.children}\n        </div>\n      </main>\n      <PageFooter />\n    </>\n  );\n}\n\n\nexport default MainSectionWrapper ","import React from \"react\";\n\nexport function CommonHead(props) {\n\n    const description = props?.data?.page?.description || \"Find all the best crochet products here at the Crochet Nest!\";\n    return (\n        <>\n            <meta name=\"theme-color\" content=\"#ffdbdf\" />\n            <title>{props.data.page ? props.data.page.name : \"The Crochet Nest\"}</title>\n\n            <meta name=\"description\" content={description} />\n\n        </>\n    )\n}\n\nexport default CommonHead;","export const cn = (props, classNames = '') => {\n    const {className = ''} = props;\n\n    return `${className} ${classNames}`.trim();\n};","import * as React from \"react\";\n\nimport {cn} from \"../../../classnames\";\n\nimport \"./styles.scss\";\n\nconst header = (type) => {\n    return (props) => {\n        switch (type) {\n            case 'h1':\n                return <h1 className={cn(props, \"HeadingText H1\")}>{props.children}</h1>\n            case 'h2':\n                return <h2 className={cn(props, \"HeadingText H2\")}>{props.children}</h2>\n            case 'h3':\n                return <h3 className={cn(props, \"HeadingText H3\")}>{props.children}</h3>\n            case 'h4':\n                return <h4 className={cn(props, \"HeadingText H4\")}>{props.children}</h4>\n            case 'h5':\n                return <h5 className={cn(props, \"HeadingText H5\")}>{props.children}</h5>\n            case 'h6':\n                return <h6 className={cn(props, \"HeadingText H6\")}>{props.children}</h6>\n            default:\n                return <p  className={cn(props, \"HeadingText\")}>{props.children}</p>\n        }\n    };\n};\n\nexport const H1 = header('h1');\nexport const H2 = header('h2');\nexport const H3 = header('h3');\nexport const H4 = header('h4');\nexport const H5 = header('h5');\nexport const H6 = header('h6');","import * as React from \"react\";\nimport { Link as GatsyLink } from \"gatsby\";\nimport ParseUrl from \"url-parse\";\nimport {cn} from \"../../../classnames\";\n\nconst okDomains = new Set([\n    \"localhost\",\n    \"petitsanimaux.github.io\",\n    \"petitsanimaux\",\n    \"crochetnest.com\",\n    \"crochetnest\",\n]);\n\nconst isCurDomain = (href) => {\n    const url = new ParseUrl(href);\n    return okDomains.has(url.hostname);\n}\n\nfunction detectURLs(message) {\n    const urlRegex = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?!&//=]*)/gi;\n    return message.match(urlRegex);\n}\n\nconst ThemedLink = (props) => {\n    const {className = '', disabled, href, useTheming = true} = props;\n    if (!href) {\n        return null;\n    }\n\n    const classname = useTheming ? cn(props, \"Link\") : cn(props, \"\");\n    const urls = detectURLs(href);\n    const url = urls && urls.length > 0 ? urls[0] : href;\n    if (isCurDomain(url)) {\n        return (\n            <GatsyLink \n                className={classname} \n                to={disabled ? \"#\" : url}>\n                {props.children}\n            </GatsyLink>\n        );\n    }\n\n    return (\n        <a className={classname} target=\"_blank\" href={disabled ? \"#\" : url}>{props.children} </a>\n    );\n}\n\nexport default ThemedLink;","// src/use-snap-carousel.tsx\nimport {\n  useState,\n  useCallback,\n  useLayoutEffect,\n  useEffect,\n  useMemo\n} from \"react\";\nvar useSnapCarousel = ({\n  axis = \"x\",\n  initialPages = []\n} = {}) => {\n  const dimension = axis === \"x\" ? \"width\" : \"height\";\n  const scrollDimension = axis === \"x\" ? \"scrollWidth\" : \"scrollHeight\";\n  const clientDimension = axis === \"x\" ? \"clientWidth\" : \"clientHeight\";\n  const nearSidePos = axis === \"x\" ? \"left\" : \"top\";\n  const farSidePos = axis === \"x\" ? \"right\" : \"bottom\";\n  const scrollPos = axis === \"x\" ? \"scrollLeft\" : \"scrollTop\";\n  const [scrollEl, setScrollEl] = useState(null);\n  const [{ pages, activePageIndex }, setCarouselState] = useState({\n    pages: initialPages,\n    activePageIndex: 0\n  });\n  const refreshActivePage = useCallback(\n    (pages2) => {\n      if (!scrollEl) {\n        return;\n      }\n      const hasScrolledToEnd = Math.floor(scrollEl[scrollDimension] - scrollEl[scrollPos]) <= scrollEl[clientDimension];\n      if (hasScrolledToEnd) {\n        setCarouselState({ pages: pages2, activePageIndex: pages2.length - 1 });\n        return;\n      }\n      const items = Array.from(scrollEl.children);\n      const scrollPort = scrollEl.getBoundingClientRect();\n      const offsets = pages2.map((page) => {\n        const leadIndex = page[0];\n        const leadEl = items[leadIndex];\n        assert(leadEl instanceof HTMLElement, \"Expected HTMLElement\");\n        const scrollSpacing = getEffectiveScrollSpacing(\n          scrollEl,\n          leadEl,\n          nearSidePos\n        );\n        const rect = leadEl.getBoundingClientRect();\n        const offset = rect[nearSidePos] - scrollPort[nearSidePos] - scrollSpacing;\n        return Math.abs(offset);\n      });\n      const minOffset = Math.min(...offsets);\n      const nextActivePageIndex = offsets.indexOf(minOffset);\n      setCarouselState({ pages: pages2, activePageIndex: nextActivePageIndex });\n    },\n    [scrollEl, clientDimension, nearSidePos, scrollDimension, scrollPos]\n  );\n  const refresh = useCallback(() => {\n    if (!scrollEl) {\n      return;\n    }\n    const items = Array.from(scrollEl.children);\n    const scrollPort = scrollEl.getBoundingClientRect();\n    let currPageStartPos;\n    const pages2 = items.reduce((acc, item, i) => {\n      assert(item instanceof HTMLElement, \"Expected HTMLElement\");\n      const currPage = acc[acc.length - 1];\n      const rect = getOffsetRect(item, item.parentElement);\n      if (!currPage || rect[farSidePos] - currPageStartPos > Math.ceil(scrollPort[dimension])) {\n        acc.push([i]);\n        const scrollSpacing = getEffectiveScrollSpacing(\n          scrollEl,\n          item,\n          nearSidePos\n        );\n        currPageStartPos = rect[nearSidePos] - scrollSpacing;\n      } else {\n        currPage.push(i);\n      }\n      return acc;\n    }, []);\n    refreshActivePage(pages2);\n  }, [\n    refreshActivePage,\n    scrollEl,\n    dimension,\n    farSidePos,\n    nearSidePos,\n    scrollPos\n  ]);\n  useLayoutEffect(() => {\n    refresh();\n  }, [refresh]);\n  useEffect(() => {\n    const handle = () => {\n      refresh();\n    };\n    window.addEventListener(\"resize\", handle);\n    window.addEventListener(\"orientationchange\", handle);\n    return () => {\n      window.removeEventListener(\"resize\", handle);\n      window.removeEventListener(\"orientationchange\", handle);\n    };\n  }, [refresh]);\n  useEffect(() => {\n    if (!scrollEl) {\n      return;\n    }\n    const handle = () => {\n      refreshActivePage(pages);\n    };\n    scrollEl.addEventListener(\"scroll\", handle);\n    return () => {\n      scrollEl.removeEventListener(\"scroll\", handle);\n    };\n  }, [refreshActivePage, pages, scrollEl]);\n  const handleGoTo = (index) => {\n    if (!scrollEl) {\n      return;\n    }\n    const page = pages[index];\n    if (!page) {\n      return;\n    }\n    const items = Array.from(scrollEl.children);\n    const leadIndex = page[0];\n    const leadEl = items[leadIndex];\n    if (!(leadEl instanceof HTMLElement)) {\n      return;\n    }\n    const scrollSpacing = getEffectiveScrollSpacing(\n      scrollEl,\n      leadEl,\n      nearSidePos\n    );\n    scrollEl.scrollTo({\n      behavior: \"smooth\",\n      [nearSidePos]: getOffsetRect(leadEl, leadEl.parentElement)[nearSidePos] - scrollSpacing\n    });\n  };\n  const handlePrev = () => {\n    handleGoTo(activePageIndex - 1);\n  };\n  const handleNext = () => {\n    handleGoTo(activePageIndex + 1);\n  };\n  const snapPointIndexes = useMemo(\n    () => new Set(pages.map((page) => page[0])),\n    [pages]\n  );\n  return {\n    prev: handlePrev,\n    next: handleNext,\n    goTo: handleGoTo,\n    refresh,\n    pages,\n    activePageIndex,\n    snapPointIndexes,\n    scrollRef: setScrollEl\n  };\n};\nvar getOffsetRect = (el, relativeTo) => {\n  const rect = _getOffsetRect(el);\n  if (!relativeTo) {\n    return rect;\n  }\n  const relativeRect = _getOffsetRect(relativeTo);\n  return {\n    left: rect.left - relativeRect.left,\n    top: rect.top - relativeRect.top,\n    right: rect.right - relativeRect.left,\n    bottom: rect.bottom - relativeRect.top,\n    width: rect.width,\n    height: rect.height\n  };\n};\nvar _getOffsetRect = (el) => {\n  const rect = el.getBoundingClientRect();\n  let scrollLeft = 0;\n  let scrollTop = 0;\n  let parentEl = el.parentElement;\n  while (parentEl) {\n    scrollLeft += parentEl.scrollLeft;\n    scrollTop += parentEl.scrollTop;\n    parentEl = parentEl.parentElement;\n  }\n  const left = rect.left + scrollLeft;\n  const top = rect.top + scrollTop;\n  return {\n    left,\n    top,\n    right: left + rect.width,\n    bottom: top + rect.height,\n    width: rect.width,\n    height: rect.height\n  };\n};\nvar getScrollPaddingUsedValue = (el, pos) => {\n  const style = window.getComputedStyle(el);\n  const scrollPadding = style.getPropertyValue(`scroll-padding-${pos}`);\n  if (scrollPadding === \"auto\") {\n    return 0;\n  }\n  const invalidMsg = `Unsupported scroll padding value, expected <length> or <percentage> value, received ${scrollPadding}`;\n  if (scrollPadding.endsWith(\"px\")) {\n    const value = parseInt(scrollPadding);\n    assert(!Number.isNaN(value), invalidMsg);\n    return value;\n  }\n  if (scrollPadding.endsWith(\"%\")) {\n    const value = parseInt(scrollPadding);\n    assert(!Number.isNaN(value), invalidMsg);\n    return el.clientWidth / 100 * value;\n  }\n  throw new RSCError(invalidMsg);\n};\nvar getScrollMarginUsedValue = (el, pos) => {\n  const style = window.getComputedStyle(el);\n  const scrollMargin = style.getPropertyValue(`scroll-margin-${pos}`);\n  const invalidMsg = `Unsupported scroll margin value, expected <length> value, received ${scrollMargin}`;\n  assert(scrollMargin.endsWith(\"px\"), invalidMsg);\n  const value = parseInt(scrollMargin);\n  assert(!Number.isNaN(value), invalidMsg);\n  return value;\n};\nvar getEffectiveScrollSpacing = (scrollEl, itemEl, pos) => {\n  const scrollPadding = getScrollPaddingUsedValue(scrollEl, pos);\n  const scrollMargin = getScrollMarginUsedValue(itemEl, pos);\n  const rect = getOffsetRect(itemEl, itemEl.parentElement);\n  return Math.min(scrollPadding + scrollMargin, rect[pos]);\n};\nfunction assert(value, message) {\n  if (value) {\n    return;\n  }\n  throw new RSCError(message);\n}\nvar RSCError = class extends Error {\n  constructor(message) {\n    super(`[react-snap-carousel]: ${message}`);\n  }\n};\nexport {\n  useSnapCarousel\n};\n","import * as React from \"react\";\n\nimport \"./styles.scss\";\n\nconst Arrow = (props) => {\n    const {color = ''} = props; \n    return (\n        <button aria-label=\"Arrow Button\" className={`Arrow ${props.isLeft ? 'LeftArrow' : 'RightArrow'} ${color}`}></button>\n    );\n}\n\nexport default Arrow;","import * as React from \"react\";\nimport { useSnapCarousel } from 'react-snap-carousel';\nimport IconButton from \"../IconButton\";\nimport Arrow from \"../../../icons/arrow\";\nimport \"./styles.scss\";\n\nconst Chevron = (props) => {\n  const { isLeft, onClick } = props;\n  const cn = isLeft ? \"ScrollButton Left\" : \"ScrollButton Right\"; \n\n  return (\n    <IconButton\n      className={cn}\n      variant=\"unstyled\"\n      onClick={onClick}\n    >\n      <Arrow isLeft={isLeft} color={'pink'} />\n    </IconButton>\n  );\n}\n\nconst Carousel = (props) => {\n  const {\n    activePageIndex,\n    scrollRef,\n    goTo,\n    snapPointIndexes,\n    next,\n    prev,\n    pages,\n  } = useSnapCarousel();\n  const isAtEnd = activePageIndex === pages.length - 1;\n  const isAtBeginning = activePageIndex === 0;\n\n  const onClick = (isLeft) => {\n    return () => {\n      if (isLeft) {\n        if (isAtBeginning) {\n          goTo(pages.length - 1);\n        } else {\n          prev();\n        }\n      } else {\n        if (isAtEnd) {\n          goTo(0);\n        } else {\n          next();\n        }\n      }\n    }\n  };\n\n  const imagesPerPage = pages.length > 0 ? pages[0].length : 0,\n    start = Math.max((activePageIndex * imagesPerPage) - imagesPerPage, 0),\n    end = Math.min(start + imagesPerPage + imagesPerPage, props.children.length - 1);\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"CarouselContainer\"\n        ref={scrollRef}\n        style={{\n          display: 'flex',\n          overflow: 'auto',\n          scrollSnapType: 'x mandatory'\n        }}\n      >\n        {props.children.map((childImg, idx) => {\n          return (\n            <li className=\"CarouselImage\"\n              style={{\n                scrollSnapAlign: snapPointIndexes.has(idx) ? \"start\" : \"\"\n              }} key={idx}>\n                {idx >= start && idx <= end &&\n                  <>\n                    {childImg}\n                  </>\n                }\n            </li>\n          );\n        })}\n      </ul>\n\n      <Chevron \n          isLeft={true} \n          onClick={onClick(true)}\n      />\n      <Chevron\n        isLeft={false}\n        onClick={onClick(false)}\n      />\n    </div>\n  );\n};\n\nconst CarouselWrapper = (props) => {\n  if (props.children.length === 0) {\n    return null;\n  }\n\n  return <Carousel {...props} />\n};\n\nexport default CarouselWrapper;","export default __webpack_public_path__ + \"static/petit_animal-6d2e82b47a24b3771bc100bd0135f6a3.jpg\";","import React, { useMemo } from \"react\";\nimport { H1, H2, H3 } from \"../Header\";\nimport Link from \"../Link\";\nimport CarouselWrapper from \"../Carousel\";\n\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport PetitsAnimauxImg from \"../../../images/petit_animal.jpg\";\n\nimport \"./styles.scss\";\n\nconst PetitsAnimauxProductCard = (props) => {\n  const {node} = props;\n  return (\n    <div className=\"PetitsAnimauxCardContainer\">\n      <div className=\"PetitsAnimauxCard\">\n        <div className=\"PetitsAnimauxCardImage\">\n          <GatsbyImage \n            image={getImage(node.coverPhoto.file)} \n            alt={node.name}\n          />\n        </div>\n        <H3 className=\"PetitsAnimauxCardTitle\">{node.name}</H3>\n\n        { \n          node.dimensions.map((str, idx) => {\n            return <p className=\"PetitsAnimauxDescription\" key={idx}>{str}</p>\n          })\n        }\n\n        <H3 className=\"PetitsAnimauxCardPrice\">USD ${node.price}</H3>\n        <Link key={node.id} className=\"PetitsAnimauxCardLink\" href={node.stripeUrl} useTheming={false}>Buy</Link>\n      </div>\n    </div>\n  );\n}\n\nconst PetitsAnimauxSection = (props) => {\n  const {productMetadata} = props;\n  const { metadata, products } = productMetadata;\n\n  if (products.length === 0) {\n    return null;\n  }\n\n  return (\n    <div key={productMetadata.type}>\n      <H2>{metadata.title}</H2>\n\n    <div style={{height: '500px'}}>\n      <CarouselWrapper>\n        {products.map((node) => {\n          return (\n            <PetitsAnimauxProductCard key={node.id} node={node} />\n          );\n        })}\n      </CarouselWrapper>\n    </div>\n    </div>\n  );\n}\n\nconst PetitsAnimaux = (props) => {\n  const { productTypeMapping, products, photos } = props;\n  const normalizedProducts = useMemo(\n    () => {\n      const categories = {};\n\n      products.forEach(product => {\n        const { category } = product;\n        if (productTypeMapping[category]) {\n          if (!categories[category]) {\n            categories[category] = [];\n          }\n\n          categories[category].push({\n            ...product,\n            coverPhoto: photos.find(photo => (photo.description || \"\").trim() === product.coverPhotoId.trim()),\n            dimensions: [\n              product.length ? `Length: ${product.length}` : null,\n              product.width ? `Width: ${product.width}` : null,\n              product.height ? `Height: ${product.height}` : null,\n            ].filter(a => a),\n          });\n        }\n      });\n\n      const res = Object.keys(categories)\n        .filter(key => categories[key].length > 0)\n        .map(key => {\n\n          return {\n            type: key,\n            products: categories[key],\n            metadata: productTypeMapping[key],\n          };\n        });\n\n      return res;\n    },\n    [productTypeMapping, products, photos]\n  );\n\n  return (\n    <div className=\"PetitsAnimauxSection\">\n      <img style={{ width: \"100%\" }} src={PetitsAnimauxImg} alt=\"Petits Animaux Banner\" />\n\n      <H1>Products</H1>\n\n      {normalizedProducts.map((productMetadata) => {\n        return (\n          <PetitsAnimauxSection \n            key={productMetadata.type} \n            productMetadata={productMetadata} \n          />\n        );\n      })}\n    </div>\n  )\n};\n\nexport default PetitsAnimaux;","import { graphql } from \"gatsby\"\nimport React from \"react\";\nimport MainSectionWrapper from \"../layout\";\nimport CommonHead from \"../layout/components/Head\";\nimport PetitsAnimaux from \"../layout/components/PetitsAnimauxHome\";\n\nconst PageTemplate = (props) => {\n  const {\n    allGoogleSpreadsheetPetitsAnimauxCategories,\n    allGoogleSpreadsheetPetitsAnimauxProducts,\n    allGooglePhotosPhoto,\n  } = props.data;\n  \n  const productTypeMapping = React.useMemo(() => {\n    const productTypeMapping = {};\n    allGoogleSpreadsheetPetitsAnimauxCategories.nodes.forEach((node) => {\n      productTypeMapping[node.category] = {\n        title: node.title,\n      };\n    });\n\n    return productTypeMapping;\n  }, [allGoogleSpreadsheetPetitsAnimauxCategories]);\n\n  const products = allGoogleSpreadsheetPetitsAnimauxProducts.nodes;\n  const photos = React.useMemo(() => {\n    return allGooglePhotosPhoto.nodes.filter(photo => photo.description);\n  }, [allGooglePhotosPhoto]);\n\n  return (\n    <MainSectionWrapper>\n      <PetitsAnimaux {...props} \n        productTypeMapping={productTypeMapping} \n        products={products} \n        photos={photos}\n      />\n    </MainSectionWrapper>\n  )\n};\n\nexport function Head(props) {\n  const data = {\n    page: {\n      name: \"Crochet Nest Home\",\n    }\n  };\n\n  return <CommonHead {...props} data={data} />;\n}\n\nexport const query = graphql`\n  query PetitsAnimaux {\n    allGoogleSpreadsheetPetitsAnimauxProducts {\n      nodes {\n        name\n        id\n        price\n        category\n        stripeUrl\n        coverPhotoId\n        width\n        height\n        length\n      }\n    }\n    \n    allGoogleSpreadsheetPetitsAnimauxCategories {\n      nodes {\n        category\n        title\n      }\n    }\n\n    allGooglePhotosPhoto(filter: {album: {title: {eq: \"P2F\"} } }) {\n      nodes {\n        id\n        file {\n          childImageSharp {\n            gatsbyImageData(\n              height: 160\n              placeholder: BLURRED\n              formats: [AUTO, WEBP]\n            )\n          }\n        }\n        description\n      }\n    }\n\n  }\n`;\n\nexport default PageTemplate;","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?#&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encode(key);\n      value = encode(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , controlOrWhitespace = /^[\\x00-\\x20\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/\n  , CRHTLF = /[\\n\\r\\t]/g\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , port = /:\\d+$/\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i\n  , windowsDriveLetter = /^[a-zA-Z]:/;\n\n/**\n * Remove control characters and whitespace from the beginning of a string.\n *\n * @param {Object|String} str String to trim.\n * @returns {String} A new string representing `str` stripped of control\n *     characters and whitespace from its beginning.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(controlOrWhitespace, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address, url) {     // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d*)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * Check whether a protocol scheme is special.\n *\n * @param {String} The protocol scheme of the URL\n * @return {Boolean} `true` if the protocol scheme is special, else `false`\n * @private\n */\nfunction isSpecial(scheme) {\n  return (\n    scheme === 'file:' ||\n    scheme === 'ftp:' ||\n    scheme === 'http:' ||\n    scheme === 'https:' ||\n    scheme === 'ws:' ||\n    scheme === 'wss:'\n  );\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @param {Object} location\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address, location) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n  location = location || {};\n\n  var match = protocolre.exec(address);\n  var protocol = match[1] ? match[1].toLowerCase() : '';\n  var forwardSlashes = !!match[2];\n  var otherSlashes = !!match[3];\n  var slashesCount = 0;\n  var rest;\n\n  if (forwardSlashes) {\n    if (otherSlashes) {\n      rest = match[2] + match[3] + match[4];\n      slashesCount = match[2].length + match[3].length;\n    } else {\n      rest = match[2] + match[4];\n      slashesCount = match[2].length;\n    }\n  } else {\n    if (otherSlashes) {\n      rest = match[3] + match[4];\n      slashesCount = match[3].length;\n    } else {\n      rest = match[4]\n    }\n  }\n\n  if (protocol === 'file:') {\n    if (slashesCount >= 2) {\n      rest = rest.slice(2);\n    }\n  } else if (isSpecial(protocol)) {\n    rest = match[4];\n  } else if (protocol) {\n    if (forwardSlashes) {\n      rest = rest.slice(2);\n    }\n  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n    rest = match[4];\n  }\n\n  return {\n    protocol: protocol,\n    slashes: forwardSlashes || isSpecial(protocol),\n    slashesCount: slashesCount,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '', location);\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (\n    extracted.protocol === 'file:' && (\n      extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) ||\n    (!extracted.slashes &&\n      (extracted.protocol ||\n        extracted.slashesCount < 2 ||\n        !isSpecial(url.protocol)))\n  ) {\n    instructions[3] = [/(.*)/, 'pathname'];\n  }\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address, url);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      index = parse === '@'\n        ? address.lastIndexOf(parse)\n        : address.indexOf(parse);\n\n      if (~index) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n\n  if (url.auth) {\n    index = url.auth.indexOf(':');\n\n    if (~index) {\n      url.username = url.auth.slice(0, index);\n      url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n      url.password = url.auth.slice(index + 1);\n      url.password = encodeURIComponent(decodeURIComponent(url.password))\n    } else {\n      url.username = encodeURIComponent(decodeURIComponent(url.auth));\n    }\n\n    url.auth = url.password ? url.username +':'+ url.password : url.username;\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (port.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    case 'username':\n    case 'password':\n      url[part] = encodeURIComponent(value);\n      break;\n\n    case 'auth':\n      var index = value.indexOf(':');\n\n      if (~index) {\n        url.username = value.slice(0, index);\n        url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n        url.password = value.slice(index + 1);\n        url.password = encodeURIComponent(decodeURIComponent(url.password));\n      } else {\n        url.username = encodeURIComponent(decodeURIComponent(value));\n      }\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.auth = url.password ? url.username +':'+ url.password : url.username;\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , host = url.host\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result =\n    protocol +\n    ((url.protocol && url.slashes) || isSpecial(url.protocol) ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  } else if (url.password) {\n    result += ':'+ url.password;\n    result += '@';\n  } else if (\n    url.protocol !== 'file:' &&\n    isSpecial(url.protocol) &&\n    !host &&\n    url.pathname !== '/'\n  ) {\n    //\n    // Add back the empty userinfo, otherwise the original invalid URL\n    // might be transformed into a valid one with `url.pathname` as host.\n    //\n    result += '@';\n  }\n\n  //\n  // Trailing colon is removed from `url.host` when it is parsed. If it still\n  // ends with a colon, then add back the trailing colon that was removed. This\n  // prevents an invalid URL from being transformed into a valid one.\n  //\n  if (host[host.length - 1] === ':' || (port.test(url.hostname) && !url.port)) {\n    host += ':';\n  }\n\n  result += host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n"],"names":["j","hasNativeLazyLoadSupport","HTMLImageElement","prototype","T","e","t","a","Boolean","images","fallback","src","gatsbyImageData","gatsbyImage","childImageSharp","_","i","s","width","height","className","style","O","h","loading","shouldLoad","opacity","z","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","P","A","_ref5","layout","paddingTop","maxWidth","display","alt","role","q","children","u","H","F","G","srcSet","decoding","V","sources","sizes","length","map","_ref6","media","type","key","B","propTypes","displayName","U","Y","Error","X","J","Z","K","replace","Q","_len","arguments","Array","_key","c","concat","ee","image","te","ae","ie","Set","se","re","ne","as","class","g","onStartLoad","p","onLoad","m","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","oe","le","de","__imageData","__error","console","warn","ce","imgClassName","imgStyle","placeholder","he","_len2","_key2","ue","ge","pe","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","x","trim","filter","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","preserveCamelCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","lastIndex","m1","charAt","postProcess","identifier","module","exports","now","moment","year","React","props","PageFooter","_props$data","_props$data$page","description","data","page","name","content","cn","classNames","header","H1","H2","H3","okDomains","disabled","href","useTheming","classname","urls","match","url","ParseUrl","hostname","isCurDomain","GatsyLink","to","target","getOffsetRect","el","relativeTo","rect","_getOffsetRect","relativeRect","getBoundingClientRect","scrollLeft","scrollTop","parentEl","parentElement","getEffectiveScrollSpacing","scrollEl","itemEl","pos","scrollPadding","window","getComputedStyle","getPropertyValue","invalidMsg","endsWith","value","parseInt","assert","Number","isNaN","clientWidth","RSCError","getScrollPaddingUsedValue","scrollMargin","getScrollMarginUsedValue","Math","min","message","constructor","super","color","isLeft","Chevron","onClick","IconButton","variant","Arrow","Carousel","activePageIndex","scrollRef","goTo","snapPointIndexes","next","prev","pages","axis","initialPages","dimension","scrollDimension","clientDimension","nearSidePos","farSidePos","scrollPos","setScrollEl","useState","setCarouselState","refreshActivePage","useCallback","pages2","floor","items","from","scrollPort","offsets","leadIndex","leadEl","HTMLElement","scrollSpacing","offset","abs","minOffset","nextActivePageIndex","indexOf","refresh","currPageStartPos","reduce","acc","item","currPage","ceil","push","useLayoutEffect","useEffect","handle","handleGoTo","index","scrollTo","behavior","useMemo","useSnapCarousel","isAtEnd","isAtBeginning","imagesPerPage","start","max","end","overflow","scrollSnapType","childImg","idx","scrollSnapAlign","PetitsAnimauxProductCard","node","GatsbyImage","getImage","coverPhoto","file","dimensions","str","price","Link","id","stripeUrl","PetitsAnimauxSection","productMetadata","metadata","products","title","CarouselWrapper","productTypeMapping","photos","normalizedProducts","categories","forEach","product","category","find","photo","coverPhotoId","Object","keys","PetitsAnimauxImg","Head","CommonHead","assign","allGoogleSpreadsheetPetitsAnimauxCategories","allGoogleSpreadsheetPetitsAnimauxProducts","allGooglePhotosPhoto","nodes","MainSectionWrapper","PetitsAnimaux","hasOwnProperty","decode","decodeURIComponent","encode","encodeURIComponent","obj","prefix","pairs","call","parse","query","part","parser","result","exec","port","protocol","split","required","qs","controlOrWhitespace","CRHTLF","slashes","protocolre","windowsDriveLetter","trimLeft","toString","rules","address","isSpecial","NaN","undefined","ignore","hash","lolcation","loc","self","location","finaldestination","Url","unescape","pathname","scheme","extractProtocol","rest","forwardSlashes","otherSlashes","slashesCount","this","relative","extracted","instruction","instructions","lastIndexOf","base","path","last","unshift","up","splice","resolve","host","username","password","auth","origin","set","fn","pop","char","ins"],"sourceRoot":""}