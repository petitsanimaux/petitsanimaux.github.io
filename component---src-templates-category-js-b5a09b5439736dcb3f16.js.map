{"version":3,"file":"component---src-templates-category-js-b5a09b5439736dcb3f16.js","mappings":"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","sources":["webpack://wedding/./src/layout/components/Button/index.js","webpack://wedding/./src/layout/components/AddToCartButton/index.js","webpack://wedding/./src/layout/components/StripeBuyButton/index.js","webpack://wedding/./src/layout/jsonLd/index.js","webpack://wedding/./src/layout/components/HomeProductCard/index.js","webpack://wedding/./src/layout/pages/CategoryPage/index.js","webpack://wedding/./src/templates/category.js"],"sourcesContent":["import * as React from \"react\";\n\nimport \"./styles.scss\";\n\nconst Button = (props) => {\n\n    return (\n        <button className=\"Button\" {...props}>\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;","import React, { useContext, useState }  from \"react\";\nimport cartContext from \"../../../context/cartContext\";\n\nimport Button from \"../Button\";\n\nconst AddToCartButton = (props) => {\n    const [ isAdding, setIsAdding] = useState(false);\n    const { cart, updateQuantity } = useContext(cartContext);\n\n    const {id, priceId} = props;\n    if (!priceId) {\n        return null;\n    }\n\n    const addItem = () => {\n        const item = cart.find(item => item.priceId === priceId);\n        if (!item) {\n            updateQuantity(priceId, id, 1);\n        } else {\n            updateQuantity(priceId, id, item.quantity + 1);\n        }\n        setIsAdding(true);\n        setTimeout(() => {\n            setIsAdding(false);\n        }, 400);\n    };\n\n    const text = isAdding ? 'Adding':  'Add to cart';\n    return (\n        <Button disabled={isAdding} onClick={addItem}>{text}</Button>\n    )\n}\n\nexport default AddToCartButton;","import React from \"react\";\nimport AddToCartButton from \"../AddToCartButton\";\n\nimport \"./styles.scss\";\n\nconst StripeBuyButton = (props) => {\n    const {id, priceId} = props;\n\n    return (\n        <AddToCartButton priceId={priceId} id={id} />\n    );\n}\n\nexport default StripeBuyButton;","import React, {useEffect, useState}  from \"react\";\n\nexport const withTwoPassRendering = (WrappedComponent) => ({\n    children,\n    ...rest\n  }) => {\n    const [isClient, setIsClient] = useState(false);\n  \n    useEffect(() => {\n      setIsClient(true);\n    }, [setIsClient]);\n  \n    return (\n      <WrappedComponent {...rest} key={isClient}>\n        {children}\n      </WrappedComponent>\n    );\n  };\n\nconst JsonLd = (props) => {\n  const { data } = props;\n\n  return (\n    <script type='application/ld+json' dangerouslySetInnerHTML={{ __html: JSON.stringify(data) }} />\n  )\n\n};\n\nexport default JsonLd;","import React from \"react\";\nimport { H3 } from \"../Header\";\nimport { Link as GatsyLink } from \"gatsby\";\nimport StripeBuyButton from \"../StripeBuyButton\";\n\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport \"./styles.scss\";\n\nconst PetitsAnimauxProductCardImg = (props) => {\n    const {coverPhoto, name} = props;\n\n    return (\n        <div className=\"PetitsAnimauxCardImage\">\n            <GatsbyImage\n                image={getImage(coverPhoto.file)}\n                alt={name}\n            />\n        </div> \n    );\n}\n\nconst PetitsAnimauxProductCard = (props) => {\n    const { node } = props;\n\n    const {id, price, priceId} = node;\n    const name = node.name.trim();\n    const url = (\"/product/\" + id).trim();\n\n    return (\n        <div className=\"PetitsAnimauxCardContainer\">\n            <div className=\"PetitsAnimauxCard\">\n\n                <GatsyLink className=\"PetitsAnimauxCardLink\" to={url}>\n                    <PetitsAnimauxProductCardImg coverPhoto={node.coverPhoto} name={name} />\n                    <H3 className=\"PetitsAnimauxCardTitle\">{name}</H3>\n                </GatsyLink>\n                \n                <StripeBuyButton \n                    price={price} \n                    priceId={priceId} \n                    id={id} \n                />\n            </div>\n        </div>\n    );\n}\n\nexport default PetitsAnimauxProductCard;","import React, { useMemo } from \"react\";\nimport { H1 } from \"../../components/Header\";\nimport PetitsAnimauxProductCard from \"../../components/HomeProductCard\";\n\nimport \"./styles.scss\";\n\nconst Section = (props) => {\n  const {productMetadata} = props;\n  if (!productMetadata) {\n    return null;\n  }\n\n  const { products } = productMetadata;\n  if (products.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"ProductContainer\">\n      {products.map((node) => {\n        return (\n          <PetitsAnimauxProductCard key={node.id} node={node} />\n        );\n      })}\n    </div>\n  );\n}\n\nconst CategoryPage = (props) => {\n  const { categoryName, productTypeMapping, products, photos } = props;\n  const normalizedProducts = useMemo(\n    () => {\n      const categories = {};\n      products.forEach(product => {\n        const { category } = product;\n        if (productTypeMapping[category]) {\n          if (!categories[category]) {\n            categories[category] = [];\n          }\n\n          categories[category].push({\n            ...product,\n            coverPhoto: photos.find(photo => (photo.description || \"\").trim() === product.coverPhotoId.trim()),\n            dimensions: [\n              product.length ? `Length: ${product.length}` : null,\n              product.width ? `Width: ${product.width}` : null,\n              product.height ? `Height: ${product.height}` : null,\n            ].filter(a => a),\n          });\n        }\n      });\n\n      const res = Object.keys(categories)\n        .filter(key => categories[key].length > 0)\n        .map(key => {\n\n          return {\n            type: key,\n            products: categories[key],\n            metadata: productTypeMapping[key],\n          };\n        });\n\n      return res;\n    },\n    [productTypeMapping, products, photos]\n  );\n\n  return (\n    <div className=\"CategoryPage\">\n\n      <H1>Shop for {categoryName}</H1>\n\n      <Section \n        productMetadata={normalizedProducts[0]} \n      />\n    </div>\n  )\n};\n\nexport default CategoryPage;","import { graphql } from \"gatsby\";\n\nimport React from \"react\";\nimport MainSectionWrapper from \"../layout\";\nimport CommonHead from \"../layout/Head\";\nimport CategoryPage from \"../layout/pages/CategoryPage\";\nimport JsonLd from \"../layout/jsonLd\";\n\nconst baseJsonLd = {\n  \"@context\": \"http://schema.org/\",\n  \"@type\": \"Organization\",\n  \"name\": \"CrochetNest\",\n  \"logo\": \"https://crochetnest.com/icons/icon-512x512.png\",\n  \"url\": \"https://crochetnest.com/\",\n  \"description\": \"Discover the unique items that Crochet Nests creates. We sell the best crochet products.\",\n};\n\nconst PageTemplate = (props) => {\n    const {\n    allGoogleSpreadsheetPetitsAnimauxCategories,\n    allGoogleSpreadsheetPetitsAnimauxProducts,\n    allGooglePhotosPhoto,\n  } = props.data;\n  const productTypeMapping = React.useMemo(() => {\n    const productTypeMapping = {};\n    allGoogleSpreadsheetPetitsAnimauxCategories.nodes.forEach((node) => {\n      productTypeMapping[node.category] = {\n        title: node.title,\n      };\n    });\n\n    return productTypeMapping;\n  }, [allGoogleSpreadsheetPetitsAnimauxCategories]);\n\n  const products = allGoogleSpreadsheetPetitsAnimauxProducts.nodes;\n  const photos = React.useMemo(() => {\n    return allGooglePhotosPhoto.nodes.filter(photo => photo.description);\n  }, [allGooglePhotosPhoto]);\n\n  return (\n    <>\n      <MainSectionWrapper>\n        <CategoryPage {...props} \n            categoryName={props.pageContext.categoryName}\n            productTypeMapping={productTypeMapping} \n            products={products} \n            photos={photos}\n        />\n      </MainSectionWrapper>\n\n      <JsonLd data={baseJsonLd} />\n    </>\n  )\n};\n\nexport function Head(props) {\n    const name = props.pageContext.categoryName;\n    const data = {\n        page: {\n            name, \n        }\n    };\n\n    return <CommonHead {...props} data={data} />;\n}\n\nexport const query = graphql`\n  query PetitsAnimaux($category: String!) {\n    allGoogleSpreadsheetPetitsAnimauxProducts {\n      nodes {\n        name\n        id\n        price\n        category\n        coverPhotoId\n        priceId\n        width\n        height\n        length\n      }\n    }\n    \n    allGoogleSpreadsheetPetitsAnimauxCategories(filter: { category: {eq: $category }}) {\n        nodes {\n            id\n            category\n            title\n        }\n    }\n\n    allGooglePhotosPhoto(filter: {album: {title: {eq: \"P2F\"} } }) {\n      nodes {\n        id\n        file {\n          childImageSharp {\n            gatsbyImageData(\n              height: 160\n            )\n          }\n        }\n        description\n      }\n    }\n\n  }\n`;\n\nexport default PageTemplate;"],"names":["props","React","Object","assign","className","children","isAdding","setIsAdding","useState","cart","updateQuantity","useContext","cartContext","id","priceId","text","Button","disabled","onClick","addItem","item","find","quantity","setTimeout","AddToCartButton","data","type","dangerouslySetInnerHTML","__html","JSON","stringify","PetitsAnimauxProductCardImg","coverPhoto","name","GatsbyImage","image","getImage","file","alt","node","price","trim","url","GatsyLink","to","H3","StripeBuyButton","Section","productMetadata","products","length","map","PetitsAnimauxProductCard","key","categoryName","productTypeMapping","photos","normalizedProducts","useMemo","categories","forEach","product","category","push","photo","description","coverPhotoId","dimensions","width","height","filter","a","keys","metadata","H1","baseJsonLd","Head","page","pageContext","CommonHead","allGoogleSpreadsheetPetitsAnimauxCategories","allGoogleSpreadsheetPetitsAnimauxProducts","allGooglePhotosPhoto","nodes","title","MainSectionWrapper","CategoryPage","JsonLd"],"sourceRoot":""}